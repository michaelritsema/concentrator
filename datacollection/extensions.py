watchandkill = """PCNQRVJTSVNURU5UDQouU1lOT1BTSVMNCiAgICBSdW5zIGFuZCB3YXRjaGVzIGZvciBhbnkgcHJv
Y2Vzc2VzIG5hbWVkIChDU1YgbGlzdCBvZiBuYW1lcyBwYXNzZWQgYXMgcGFyYW1ldGVyKSBhbmQg
dGVybWluYXRlIHRoZW0NCi5ERVNDUklQVElPTg0KICAgIFRoaXMgc2NyaXB0IHVzZXMgdGhlIFN0
b3AtUHJvY2VzcyBjb21tYW5kIHRvIGtpbGwgYWxsIHJ1bm5pbmcgcHJvY2Vzc2VzIHRoYXQgbmFt
ZSBtYXRjaGVzDQoJb25lIG9mIGEgbGlzdCBwYXNzZWQgaW50byB0aGUgc2NyaXB0Lg0KCQ0KCU5v
dGUgYXQgdGhlIHRvcCBsaW5lIHRoZSB3b3JkIFBFUlNJU1RFTlQgaXMgaW1tZWRpYXRlbHkgYWZ0
ZXIgdGhlIG9wZW5pbmcgY29tbWVudC4NCglUaGlzIGlzIHJlcXVpcmVkIHRvIHNwZWNpZnkgaXQg
aXMgYSBQRVJTSVNURU5UIHNjcmlwdCByYXRoZXIgdGhhbiBhIEVwaGVtZXJhbCBvbmUuDQouUEFS
QU1FVEVSIFByb2Nlc3NOYW1lWyxQcm9jZXNzTmFtZV0NCiAgICBbaW50XU1heEZpbGVTaXplQmVm
b3JlQWxlcnRTZW50IC0gZGVmYXVsdCBpcyAxMDAwLCBvciAxR0INCi5OT1RFUw0KTmFtZTogV2F0
Y2hBbmRLaWxsUHJvY2Vzc2VzDQpBdXRob3I6IERhdmlkIFN0aWRvbHBoDQpEYXRlQ3JlYXRlZDog
OC8yMC8yMDE1DQoNCk9VVFBVVA0KPT09PT09DQoxMDAyMDEgI0V2ZW50IElEDQojIHRoZSBmb2xs
b3dpbmcgd291bGQgYmUgb24gb25lIGxpbmUgd2l0aCAnfCcgc2VwZXJhdGluZyB0aGVtDQpub3Rl
cGFkICNQcm9jZXNzTmFtZQ0KVGh1cnNkYXksIEF1Z3VzdCAyMCwgMjAxNSAzOjEzOjEzIFBNICNT
dGFydCBUaW1lDQoJDQojPg0KUGFyYW0gKA0KCVtpbnRdJHBvbGxUaW1lU2Vjb25kcywNCiAgICBb
c3RyaW5nXSRwcm9jZXNzTGlzdA0KKQ0KJGV2ZW50SUQgPSAxMDAyMDENCmlmICgkcG9sbFRpbWVT
ZWNvbmRzIC1sdCAxMCkgew0KCSRwb2xsVGltZVNlY29uZHMgPSAxMA0KfQ0KDQojRml4IG91dHB1
dCB0byBOT1QgcHV0IGxpbmUgYnJlYWtzIGluIHRoZSBvdXRwdXQgKG9rLCBhZnRlciA0ayBjb2x1
bW5zIGl0IHdpbGwpDQppZiggJEhvc3QgLWFuZCAkSG9zdC5VSSAtYW5kICRIb3N0LlVJLlJhd1VJ
ICkgew0KCSRyYXdVSSA9ICRIb3N0LlVJLlJhd1VJDQoJJG9sZFNpemUgPSAkcmF3VUkuQnVmZmVy
U2l6ZQ0KCSR0eXBlTmFtZSA9ICRvbGRTaXplLkdldFR5cGUoICkuRnVsbE5hbWUNCgkkbmV3U2l6
ZSA9IE5ldy1PYmplY3QgJHR5cGVOYW1lICg0MDk2LCAkb2xkU2l6ZS5IZWlnaHQpDQoJJHJhd1VJ
LkJ1ZmZlclNpemUgPSAkbmV3U2l6ZQ0KfQ0KDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KI3RoZXNlIGFy
ZSB1dGlsaXR5IG1ldGhvZHMgZm9yIGRvaW5nIGNvbW1vbiB0YXNrcyBmb3IgWmlmdGVuIGV4dGVu
c2lvbiBzY3JpcHRzDQojcG93ZXJzaGVsbCB2ZXJzaW9uIChvbmx5IHdvcmtzIGZvciAyIGFuZCB1
cCkNCiRwc3ZlcnNpb24gPSAkUFNWZXJzaW9uVGFibGUuUFNWZXJzaW9uDQojZ2V0IHRoZSBuYW1l
IG9mIHRoaXMgc2NyaXB0LCBzZXJ2ZXMgYXMgYmFzZSBmb3IgdGhpbmdzDQokc2NyaXB0TmFtZSA9
IHNwbGl0LXBhdGggLUxlYWYgJE15SW52b2NhdGlvbi5NeUNvbW1hbmQuRGVmaW5pdGlvbg0KI2dl
dCB0aGUgZGlyZWN0b3J5IG9mIHRoaXMgc2NyaXB0LCB3aGljaCBjb3VsZCBiZSB1c2VkIGZvciB0
ZW1wIGZpbGVzDQokc2NyaXB0UGF0aCA9IHNwbGl0LXBhdGggLXBhcmVudCAkTXlJbnZvY2F0aW9u
Lk15Q29tbWFuZC5EZWZpbml0aW9uDQojZ2V0IHRoZSBuYW1lIG9mIHRoZSAnYmVnaW4nIGFuZCAn
ZW5kJyBldmVudHMsIHdoaWNoIGFyZSB1c2VkIHdoZW4gcnVubmluZyAncGVyc2lzdGVudCdseSAo
b25seSkNCiRiZWdpbkV2ZW50TmFtZSA9ICggIkdsb2JhbFwiICsgJHNjcmlwdE5hbWUgKyAiLmJl
Z2luIiApDQokZW5kRXZlbnROYW1lID0gKCAiR2xvYmFsXCIgKyAkc2NyaXB0TmFtZSArICIuZW5k
IiApDQoNCiNzdGFuZGFyZCBtZXRob2Qgb2YgZW1pdHRpbmcgZXh0ZW5zaW9uIHJlc3VsdHMNCmZ1
bmN0aW9uIEVtaXRFeHRlbnNpb25SZXN1bHRzDQp7DQoJcGFyYW0gKA0KCQlbaW50XSRldmVudENv
ZGUsICN0aGUgcmVxdWlyZWQgbHVjYXNpYW4gZXZlbnQgY29kZQ0KCQlbU3lzdGVtLkNvbGxlY3Rp
b25zLkFycmF5TGlzdF0kcmVzdWx0U2V0ICN0aGUgb3B0aW9uYWwgc2V0IG9mIG11bHRpLXZhbHVl
ZCBkYXRhDQoJKQ0KIA0KCVdyaXRlLU91dHB1dCAiPT09PSBCRUdJTiBFWFRFTlNJT04gUkVTVUxU
UyA9PT09Ig0KCVdyaXRlLU91dHB1dCAkZXZlbnRDb2RlDQoNCglpZiAoJHJlc3VsdFNldCAtbmUg
JG51bGwpICNhYnN1cmQNCgl7DQoJCWZvcmVhY2ggKCAkcm93IGluICRyZXN1bHRzZXQgKQ0KCQl7
DQoJCQlpZiAoJHJvdyAtbmUgJG51bGwpICNwcmVwb3N0ZXJvdXMNCiAgICAgICAgICAgIHsNCiAg
ICAgICAgICAgICAgICBbc3RyaW5nXSRyb3d0ZXh0ID0gIiINCiAgICAgICAgICAgICAgICBmb3Jl
YWNoICggJGZpZWxkIGluICRyb3cgKQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAg
ICAgICAgI2ZpZWxkIHNlcCBpZiBub3QgZmlyc3QgaXRlbQ0KICAgICAgICAgICAgICAgICAgICBp
ZiAoIDAgLW5lICRyb3d0ZXh0Lmxlbmd0aCApDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAg
ICAgICAgICAgICAgICAgICAgICRyb3d0ZXh0ICs9ICJ8Ig0KICAgICAgICAgICAgICAgICAgICB9
DQogICAgICAgICAgICAgICAgICAgIGlmICgkZmllbGQgLWVxICRudWxsKSAjY29uY2VpdmFibGUN
CiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgI251bGwgb2Jq
ZWN0cyBqdXN0IHRyYW5zbGF0ZSB0byB0aGUgZW1wdHkgZmllbGQNCiAgICAgICAgICAgICAgICAg
ICAgfQ0KICAgICAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgIHsNCiAg
ICAgICAgICAgICAgICAgICAgICAgICNlc2NhcGUgZmllbGQNCiAgICAgICAgICAgICAgICAgICAg
ICAgIFtzdHJpbmddJGZpZWxkdGV4dCA9ICRmaWVsZA0KICAgICAgICAgICAgICAgICAgICAgICAg
JGZpZWxkdGV4dCA9ICRmaWVsZHRleHQgLXJlcGxhY2UgJ1tcXF0nLCdcXCcNCiAgICAgICAgICAg
ICAgICAgICAgICAgICRmaWVsZHRleHQgPSAkZmllbGR0ZXh0IC1yZXBsYWNlICdbXHxdJywgJ1x8
Jw0KICAgICAgICAgICAgICAgICAgICAgICAgJGZpZWxkdGV4dCA9ICRmaWVsZHRleHQgLXJlcGxh
Y2UgJ1tccl0nLCAiXGByIg0KICAgICAgICAgICAgICAgICAgICAgICAgJGZpZWxkdGV4dCA9ICRm
aWVsZHRleHQgLXJlcGxhY2UgJ1tcbl0nLCAiXGBuIg0KICAgICAgICAgICAgICAgICAgICAgICAg
JHJvd3RleHQgKz0gJGZpZWxkdGV4dA0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAg
ICAgICAgfQ0KICAgICAgICAgICAgICAgIFdyaXRlLU91dHB1dCAkcm93dGV4dA0KICAgICAgICAg
ICAgfQ0KICAgICAgICB9DQogICAgfQ0KICAgIFdyaXRlLU91dHB1dCAiPT09PSBFTkQgRVhURU5T
SU9OIFJFU1VMVFMgPT09PSINCiAgICByZXR1cm4NCn0NCg0KI2luICdwZXJzaXN0ZW50JyBtb2Rl
LCBvdXIgcHJvY2VzcyBpcyBleHBlY3RlZCB0byBsaXZlIGEgbG9uZyB3aGlsZSwgcHJvZHVjaW5n
DQojbXVsdGlwbGUgcmVzdWx0IHNldHMuIEluIHRoaXMgbW9kZSwgdGhlIGhvc3QgcHJvY2VzcyAo
aS5lLiB0aGUgQWdlbnQpIHdpbGwNCiN1c2UgZXZlbnRzIHRvIGNvbnZleSB0byB1czogYSkgdGlt
ZSB0byBydW4gKG1heWJlIGdlbmVyYXRpbmcgYSByZXN1bHQgc2V0KSwNCiNhbmQgYikgdGltZSB0
byB0ZXJtaW5hdGUuDQojZ2V0IG91ciBiZWdpbiBhbmQgZW5kIGV2ZW50IGhhbmRsZXMsIGlmIHBv
c3NpYmxlIChpLmUuLCBvbmx5IGlmIHdlIGFyZSBiZWluZyBydW4gJ3BlcnNpc3RlbnRseScpDQpm
dW5jdGlvbiBHZXRFdmVudEhhbmRsZXNGb3JQZXJzaXN0ZW50TW9kZQ0Kew0KICAgICRldnRCZWdp
biA9ICRudWxsDQogICAgdHJ5IHsgJGV2dEJlZ2luID0gW1N5c3RlbS5UaHJlYWRpbmcuRXZlbnRX
YWl0SGFuZGxlXTo6T3BlbkV4aXN0aW5nKCRiZWdpbkV2ZW50TmFtZSkgfQ0KICAgIGNhdGNoIHsg
fQ0KICAgICRldnRFbmQgPSAkbnVsbA0KICAgIHRyeSB7ICRldnRFbmQgPSBbU3lzdGVtLlRocmVh
ZGluZy5FdmVudFdhaXRIYW5kbGVdOjpPcGVuRXhpc3RpbmcoJGVuZEV2ZW50TmFtZSkgfQ0KICAg
IGNhdGNoIHsgfQ0KICAgIA0KICAgIGlmICggKCAkZXZ0QmVnaW4gLW5lICRudWxsICkgLWFuZCAo
ICRldnRFbmQgLW5lICRudWxsICkgKQ0KICAgIHsNCiAgICAgICAgJHRydWUNCiAgICAgICAgJGV2
dEJlZ2luDQogICAgICAgICRldnRFbmQNCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAg
JGZhbHNlDQogICAgICAgICRudWxsDQogICAgICAgICRudWxsDQogICAgfQ0KfQ0KDQojaW4gJ3Bl
cnNpc3RlbnQnIG1vZGUsIG91ciBwcm9jZXNzIGlzIGV4cGVjdGVkIHRvIGxpdmUgYSBsb25nIHdo
aWxlLCBwcm9kdWNpbmcNCiNtdWx0aXBsZSByZXN1bHQgc2V0cy4gSW4gdGhpcyBtb2RlLCB0aGUg
aG9zdCBwcm9jZXNzIChpLmUuIHRoZSBBZ2VudCkgd2lsbA0KI3VzZSBldmVudHMgdG8gY29udmV5
IHRvIHVzOiBhKSB0aW1lIHRvIHJ1biAobWF5YmUgZ2VuZXJhdGluZyBhIHJlc3VsdCBzZXQpLA0K
I2FuZCBiKSB0aW1lIHRvIHRlcm1pbmF0ZS4NCiNnZXQgb3VyIGJlZ2luIGFuZCBlbmQgZXZlbnQg
aGFuZGxlcywgaWYgcG9zc2libGUgKGkuZS4sIG9ubHkgaWYgd2UgYXJlIGJlaW5nIHJ1biAncGVy
c2lzdGVudGx5JykNCmZ1bmN0aW9uIEdldEV2ZW50SGFuZGxlc0ZvclBlcnNpc3RlbnRNb2RlDQp7
DQogICAgJGV2dEJlZ2luID0gJG51bGwNCiAgICB0cnkgeyAkZXZ0QmVnaW4gPSBbU3lzdGVtLlRo
cmVhZGluZy5FdmVudFdhaXRIYW5kbGVdOjpPcGVuRXhpc3RpbmcoJGJlZ2luRXZlbnROYW1lKSB9
DQogICAgY2F0Y2ggeyB9DQogICAgJGV2dEVuZCA9ICRudWxsDQogICAgdHJ5IHsgJGV2dEVuZCA9
IFtTeXN0ZW0uVGhyZWFkaW5nLkV2ZW50V2FpdEhhbmRsZV06Ok9wZW5FeGlzdGluZygkZW5kRXZl
bnROYW1lKSB9DQogICAgY2F0Y2ggeyB9DQogICAgDQogICAgaWYgKCAoICRldnRCZWdpbiAtbmUg
JG51bGwgKSAtYW5kICggJGV2dEVuZCAtbmUgJG51bGwgKSApDQogICAgew0KICAgICAgICAkdHJ1
ZQ0KICAgICAgICAkZXZ0QmVnaW4NCiAgICAgICAgJGV2dEVuZA0KICAgIH0NCiAgICBlbHNlDQog
ICAgew0KICAgICAgICAkZmFsc2UNCiAgICAgICAgJG51bGwNCiAgICAgICAgJG51bGwNCiAgICB9
DQp9DQoNCiN0aGVzZSB0cml2aWFsIGhlbHBlcnMgYXJlIGhlcmUgbW9zdGx5IGZvciBkb2N1bWVu
dGF0aW9uOyBvYnZpb3VzbHkgdGhleSBhcmUgdHJpdmlhbA0KI2NyZWF0ZSByZXN1bHQgc2V0DQpm
dW5jdGlvbiBDcmVhdGVSZXN1bHRTZXQNCnsNCiAgICBOZXctT2JqZWN0IFN5c3RlbS5Db2xsZWN0
aW9ucy5BcnJheUxpc3QNCn0NCiNjcmVhdGUgcmVzdWx0IHNldCByb3cNCmZ1bmN0aW9uIENyZWF0
ZVJlc3VsdFNldFJvdw0Kew0KICAgIE5ldy1PYmplY3QgU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5
TGlzdA0KfQ0KI2FkZCByb3cgaXRlbQ0KZnVuY3Rpb24gQWRkUm93SXRlbSAoIFtTeXN0ZW0uQ29s
bGVjdGlvbnMuQXJyYXlMaXN0XSRyb3csIFtzdHJpbmddJGl0ZW0gKQ0Kew0KICAgIFt2b2lkXSRy
b3cuQWRkKCAkaXRlbSApDQp9DQojYWRkIHJvdw0KZnVuY3Rpb24gQWRkUm93ICggW1N5c3RlbS5D
b2xsZWN0aW9ucy5BcnJheUxpc3RdJHJlc3VsdHNldCwgW1N5c3RlbS5Db2xsZWN0aW9ucy5BcnJh
eUxpc3RdJHJvdyApDQp7DQogICAgW3ZvaWRdJHJlc3VsdHNldC5BZGQoICRyb3cgKQ0KfQ0KDQpG
dW5jdGlvbiBLaWxsUHJvY2VzcyhbU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdF0kcmVzdWx0
U2V0LCBbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3NdJHByb2Nlc3MpDQp7DQoJJHJvdyA9IENy
ZWF0ZVJlc3VsdFNldFJvdw0KCUFkZFJvd0l0ZW0gJHJvdyAkcHJvY2Vzcy5OYW1lDQoJQWRkUm93
SXRlbSAkcm93ICRwcm9jZXNzLlN0YXJ0VGltZQ0KCUFkZFJvdyAkcmVzdWx0U2V0ICRyb3cNCgkk
cHJvY2Vzcy5LaWxsKCkNCn0NCg0KRnVuY3Rpb24gS2lsbE1hdGNoaW5nUHJvY2Vzc2VzKFtTeXN0
ZW0uQ29sbGVjdGlvbnMuQXJyYXlMaXN0XSRyZXN1bHRTZXQsIFtzdHJpbmddJGV4ZW5hbWUpDQp7
DQoJIlRyeWluZyB0byBnZXQgcHJvY2Vzc2VzIG5hbWVkICRleGVuYW1lIg0KCSRwcm9jZXNzZXMg
PSBnZXQtcHJvY2VzcyAtbmFtZSAkZXhlbmFtZSAtRXJyb3JBY3Rpb24gU2lsZW50bHlDb250aW51
ZQ0KCWlmKCRwcm9jZXNzZXMgLWVxICRudWxsKXsNCgkJIk5vIHByb2Nlc3NlcyINCgl9DQoJZWxz
ZWlmKCRwcm9jZXNzZXMuR2V0VHlwZSgpLklzQXJyYXkpIHsNCgkJIlRoaXMgaXMgYW4gYXJyYXks
IHNvIGl0ZXJhdGUiDQoJCWZvcmVhY2goJHByb2Nlc3MgaW4gJHByb2Nlc3Nlcykgew0KCQkJS2ls
bFByb2Nlc3MgJHJlc3VsdFNldCAkcHJvY2Vzcw0KCQl9DQoJfQ0KCWVsc2Ugew0KCQkiVGhpcyBp
cyBhIHNpbmdsZSBvYmplY3QiDQoJCUtpbGxQcm9jZXNzICRyZXN1bHRTZXQgJHByb2Nlc3Nlcw0K
CX0NCn0NCg0KJGdlaHJldCA9IEdldEV2ZW50SGFuZGxlc0ZvclBlcnNpc3RlbnRNb2RlDQppZiAo
IC1ub3QgJGdlaHJldFswXSApDQp7DQoJIndlIGFyZSBub3QgaW4gJ3BlcnNpc3RlbnQnIG1vZGUg
LSBwYXNzZWQgJHBvbGxUaW1lU2Vjb25kcyBzZWNvbmRzIGFuZCAkcHJvY2Vzc0xpc3QiDQoJJHJl
c3VsdFNldCA9IENyZWF0ZVJlc3VsdFNldA0KCSRwcm9jZXNzTGlzdC5zcGxpdCgiICIpIHwgZm9y
ZWFjaCB7S2lsbE1hdGNoaW5nUHJvY2Vzc2VzICRyZXN1bHRTZXQgJF99DQoJInJlc3VsdFNldCBu
b3cgaGFzICQoJHJlc3VsdFNldC5Db3VudCkgZWxlbWVudHMiDQoJaWYgKCRyZXN1bHRTZXQuQ291
bnQgLWd0IDApIHsNCgkJIk51bWJlciBwcm9jZXNzZXMgY2xvc2VkIGlzICQoJHJlc3VsdFNldC5D
b3VudCkiDQoJCUVtaXRFeHRlbnNpb25SZXN1bHRzICRldmVudElEICRyZXN1bHRTZXQNCgl9DQp9
DQplbHNlDQp7DQoJIndlIGFyZSBpbiBwZXJzaXN0ZW50IG1vZGUgLSBwYXNzZWQgJHByb2Nlc3NM
aXN0Ig0KCSNleGFtcGxlIG9mIGEgUEVSU0lTVEVOVCBydW4gc2NlbmFyaW8NCgkjKHdlIGFscmVh
ZHkgY2FsbGVkIEdldEV2ZW50SGFuZGxlc0ZvclBlcnNpc3RlbnRNb2RlIGFib3ZlKQ0KCSRldnRC
ZWdpbiA9ICRnZWhyZXRbMV0gIyhqdXN0IGZvciByZWFkYWJpbGl0eSkNCgkkZXZ0RW5kID0gJGdl
aHJldFsyXSAjKGp1c3QgZm9yIHJlYWRhYmlsaXR5KQ0KIA0KCSJ3YWl0IGZvciBvdXIgJ2JlZ2lu
JyBldmVudCwgd2hpY2ggbWVhbnMgaXQgaXMgdGltZSB0byBydW4iDQoJaWYgKCAkZXZ0QmVnaW4u
V2FpdE9uZSgpICkNCgl7DQoJCSJCZWdpbiBFdmVudCBmaXJlZCwgbm93IGV4ZWN1dGluZyBvbmNl
IGVhY2ggJHBvbGxUaW1lU2Vjb25kcyBzZWNvbmRzIHVudGlsIEVuZCBFdmVudCBmaXJlZCINCgkJ
d2hpbGUgKCEkZXZ0RW5kLldhaXRPbmUoJHBvbGxUaW1lU2Vjb25kcyoxMDAwKSApDQoJCXsJIyBX
YWl0IGZvciB0aW1lIHRvIGV4cGlyZSB1bmxlc3MgZW5kIGV2ZW50IGZpcmVkDQoJCQkkcmVzdWx0
U2V0ID0gQ3JlYXRlUmVzdWx0U2V0DQoJCQkkcHJvY2Vzc0xpc3Quc3BsaXQoIiAiKSB8IGZvcmVh
Y2gge0tpbGxNYXRjaGluZ1Byb2Nlc3NlcyAkcmVzdWx0U2V0ICRffQ0KCQkJaWYgKCRyZXN1bHRT
ZXQuQ291bnQgLWd0IDApIHsNCgkJCQlFbWl0RXh0ZW5zaW9uUmVzdWx0cyAkZXZlbnRJRCAkcmVz
dWx0U2V0DQoJCQl9DQoJCX0NCgkJIkVuZCBFdmVudCBmaXJlZCwgd2lsbCBleGl0Ig0KCX0NCn0N
CiJMZWF2aW5nIHNjcmlwdCINCkV4aXQgMA0KDQojIFNJRyAjIEJlZ2luIHNpZ25hdHVyZSBibG9j
aw0KIyBNSUlUWFFZSktvWklodmNOQVFjQ29JSVRUakNDRTBvQ0FRRXhDekFKQmdVckRnTUNHZ1VB
TUdrR0Npc0dBUVFCDQojIGdqY0NBUVNnV3pCWk1EUUdDaXNHQVFRQmdqY0NBUjR3SmdJREFRQUFC
QkFmekR0Z1dVc0lUcmNrMHNZcGZ2TlINCiMgQWdFQUFnRUFBZ0VBQWdFQUFnRUFNQ0V3Q1FZRkt3
NERBaG9GQUFRVTQ4UXdQQnZaYVJiL0l2ZnJ0OWRkc1R0bQ0KIyBLZmlnZ2hCY01JSUUwekNDQTd1
Z0F3SUJBZ0lRR05yUm5pWjk2THRLSVZqTnpHczdTakFOQmdrcWhraUc5dzBCDQojIEFRVUZBRENC
eWpFTE1Ba0dBMVVFQmhNQ1ZWTXhGekFWQmdOVkJBb1REbFpsY21sVGFXZHVMQ0JKYm1NdU1SOHcN
CiMgSFFZRFZRUUxFeFpXWlhKcFUybG5iaUJVY25WemRDQk9aWFIzYjNKck1Ub3dPQVlEVlFRTEV6
RW9ZeWtnTWpBdw0KIyBOaUJXWlhKcFUybG5iaXdnU1c1akxpQXRJRVp2Y2lCaGRYUm9iM0pwZW1W
a0lIVnpaU0J2Ym14NU1VVXdRd1lEDQojIFZRUURFenhXWlhKcFUybG5iaUJEYkdGemN5QXpJRkIx
WW14cFl5QlFjbWx0WVhKNUlFTmxjblJwWm1sallYUnANCiMgYjI0Z1FYVjBhRzl5YVhSNUlDMGdS
elV3SGhjTk1EWXhNVEE0TURBd01EQXdXaGNOTXpZd056RTJNak0xT1RVNQ0KIyBXakNCeWpFTE1B
a0dBMVVFQmhNQ1ZWTXhGekFWQmdOVkJBb1REbFpsY21sVGFXZHVMQ0JKYm1NdU1SOHdIUVlEDQoj
IFZRUUxFeFpXWlhKcFUybG5iaUJVY25WemRDQk9aWFIzYjNKck1Ub3dPQVlEVlFRTEV6RW9ZeWtn
TWpBd05pQlcNCiMgWlhKcFUybG5iaXdnU1c1akxpQXRJRVp2Y2lCaGRYUm9iM0pwZW1Wa0lIVnpa
U0J2Ym14NU1VVXdRd1lEVlFRRA0KIyBFenhXWlhKcFUybG5iaUJEYkdGemN5QXpJRkIxWW14cFl5
QlFjbWx0WVhKNUlFTmxjblJwWm1sallYUnBiMjRnDQojIFFYVjBhRzl5YVhSNUlDMGdSelV3Z2dF
aU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3YNCiMgSkFnSUtYbzFubUFN
cXVkTE8wN2NmTHc4UlJ5N0srRCtLUUw1VndpalpJVVZKL1h4cmNneGlWMGk2Q3FxcGtLeg0KIyBq
L2k1VmJleHQwdXovbzkrQjFmczcwUGJabUlWWWM5Z0RhVFkzdmpndzJJSVBWUVQ2MG5LV1ZTRkp1
VXJqeHVmDQojIDYvV2hrY0l6U2RoRFkycFNTOUtQNkhCUlRkR0phWHZIY1BhejNCSjAyM3RkUzFi
VGxyOFZkNkd3OUtJbDhxOGMNCiMga21jWTVmUUdCTytRdWVRQTVOMDZ0Um4vQXJyMFBPN2dpK3Mz
aSt6MDE2enk5dkE5cjkxMWtUTVpIUnhBeTNRaw0KIyBHU0dUMlJUK3JDcFN4NC9WQkVua2pXTkhp
RHhwZzh2K1I3MHJmay9GbGE0T25kVFJROEJuYytNVUNIN2xQNTl6DQojIHVETUt6MTAvTkllV2l1
NVQ2Q1VWQWdNQkFBR2pnYkl3Z2E4d0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlYNCiMgSFE4
QkFmOEVCQU1DQVFZd2JRWUlLd1lCQlFVSEFRd0VZVEJmb1YyZ1d6QlpNRmN3VlJZSmFXMWhaMlV2
WjJsbQ0KIyBNQ0V3SHpBSEJnVXJEZ01DR2dRVWorWFRHb2Fzalk1cnc4K0FhdFJJR0N4N0dTNHdK
UllqYUhSMGNEb3ZMMnh2DQojIFoyOHVkbVZ5YVhOcFoyNHVZMjl0TDNaemJHOW5ieTVuYVdZd0hR
WURWUjBPQkJZRUZIL1RaYWZDM2V5NzhEQUoNCiMgODBNNStnS3ZNekV6TUEwR0NTcUdTSWIzRFFF
QkJRVUFBNElCQVFDVEpFb3dYMkxQMkJxWUx6M3EzSmt0dlhmMg0KIyBwWGtpT096RXA2QjRFcTFp
RGtWd1pNWG5sMll0bUFsK1g2L1d6Q2hsOGdHcUNCcEgzdm41ZkpKYUNHa2dEZGsrDQojIGJXNDhE
VzdZNWdhUlFCaTUrTUh0Mzl0QnF1Q1dJTW5OWkJVNGdjbVU3cUtFS1FzVGI0N2JETjBsQXR1a2l4
bEUNCiMgMGtGNkJXbEtXRTlneW42Q2Fnc0NxaVVYT2JYYmYrZUVaU3FWaXIyRzNsNkJGb010RU16
ZS9haUNLbTBvSHcwTA0KIyB4T1huR2lZWjRmUVJieEMxbGZ6blFnVXkyODZkVVY0b3RwNkYwMXZ2
cFgxRlFIS090dzVyRGdiN016VkljYmlkDQojIEo0dkVaVjhOaG5hY1JIcjJsVnoyWFRJSU02UlV0
aGcvYUZ6eVFrcUZPRlNEWDlIb0xQS3NFZGFvN1dOcU1JSUYNCiMgY3pDQ0JGdWdBd0lCQWdJUU1T
UmNWcWRNZnBmVXVkSDM5QUwrQWpBTkJna3Foa2lHOXcwQkFRVUZBRENCdERFTA0KIyBNQWtHQTFV
RUJoTUNWVk14RnpBVkJnTlZCQW9URGxabGNtbFRhV2R1TENCSmJtTXVNUjh3SFFZRFZRUUxFeFpX
DQojIFpYSnBVMmxuYmlCVWNuVnpkQ0JPWlhSM2IzSnJNVHN3T1FZRFZRUUxFekpVWlhKdGN5QnZa
aUIxYzJVZ1lYUWcNCiMgYUhSMGNITTZMeTkzZDNjdWRtVnlhWE5wWjI0dVkyOXRMM0p3WVNBb1l5
a3hNREV1TUN3R0ExVUVBeE1sVm1WeQ0KIyBhVk5wWjI0Z1EyeGhjM01nTXlCRGIyUmxJRk5wWjI1
cGJtY2dNakF4TUNCRFFUQWVGdzB4TkRBek1qVXdNREF3DQojIE1EQmFGdzB4TmpBME1qTXlNelU1
TlRsYU1JRzJNUXN3Q1FZRFZRUUdFd0pWVXpFT01Bd0dBMVVFQ0JNRlZHVjQNCiMgWVhNeER6QU5C
Z05WQkFjVEJrRjFjM1JwYmpFaU1DQUdBMVVFQ2hRWldtbG1kR1Z1SUZSbFkyaHViMnh2WjJsbA0K
IyBjeXdnU1c1akxqRStNRHdHQTFVRUN4TTFSR2xuYVhSaGJDQkpSQ0JEYkdGemN5QXpJQzBnVFds
amNtOXpiMlowDQojIElGTnZablIzWVhKbElGWmhiR2xrWVhScGIyNGdkakl4SWpBZ0JnTlZCQU1V
R1ZwcFpuUmxiaUJVWldOb2JtOXMNCiMgYjJkcFpYTXNJRWx1WXk0d2dnRWlNQTBHQ1NxR1NJYjNE
UUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM2TWxDaw0KIyBDczBwVnkwa1dtWEU3TGhnTXV3RUFj
VDJJeEc2ZnpyTFB6T1RocFI3R1BBSllLRzBUczdHeDBWWXIxSDIxVnFtDQojIHpGaGNtdDUvQTRm
T2xlRDNyeVYvdmlJS0xGeHdCcVQ0SS9URUlQQnQ2VE9DbE9KcGdhc0FMWmgrc0ZNNkN0cGgNCiMg
em9oR1g0QWt1NUpjM3V2U1VVQ2luR0lVaFJXYTFyVVFLdDEzM1lGRUF2Q3orRU05RlVReDNxMzA5
eVBaM1JIdQ0KIyBEWmZ0c1YrYjFoVHlPOWdOUkpUWjFZbHZhWnZSckhyRFpFSitEN3M5V2dVOHho
SzNoN0JEL01PekFZVTlOSGNyDQojIEc2ZjR0OSsyRVJzbDB1cGJJdStMeHBLSW81OElhNkdMS1Z0
WVdXREN5ZXF4NjIvb2RPNHpQeXBEUmNaaHZHOC8NCiMgZ0cyOHVhTnA1YS9vUVRETkFnTUJBQUdq
Z2dGN01JSUJkekFKQmdOVkhSTUVBakFBTUE0R0ExVWREd0VCL3dRRQ0KIyBBd0lIZ0RCQUJnTlZI
UjhFT1RBM01EV2dNNkF4aGk5b2RIUndPaTh2WTNOak15MHlNREV3TFdOeWJDNTJaWEpwDQojIGMy
bG5iaTVqYjIwdlExTkRNeTB5TURFd0xtTnliREJFQmdOVkhTQUVQVEE3TURrR0MyQ0dTQUdHK0VV
QkJ4Y0QNCiMgTUNvd0tBWUlLd1lCQlFVSEFnRVdIR2gwZEhCek9pOHZkM2QzTG5abGNtbHphV2R1
TG1OdmJTOXljR0V3RXdZRA0KIyBWUjBsQkF3d0NnWUlLd1lCQlFVSEF3TXdjUVlJS3dZQkJRVUhB
UUVFWlRCak1DUUdDQ3NHQVFVRkJ6QUJoaGhvDQojIGRIUndPaTh2YjJOemNDNTJaWEpwYzJsbmJp
NWpiMjB3T3dZSUt3WUJCUVVITUFLR0wyaDBkSEE2THk5amMyTXoNCiMgTFRJd01UQXRZV2xoTG5a
bGNtbHphV2R1TG1OdmJTOURVME16TFRJd01UQXVZMlZ5TUI4R0ExVWRJd1FZTUJhQQ0KIyBGTSta
cWVwN0p2Ukx5WTZQMS9BRkp1L2owcWVkTUJFR0NXQ0dTQUdHK0VJQkFRUUVBd0lFRURBV0Jnb3JC
Z0VFDQojIEFZSTNBZ0ViQkFnd0JnRUJBQUVCL3pBTkJna3Foa2lHOXcwQkFRVUZBQU9DQVFFQVVY
czE3bkhOd0UwT3o5L3MNCiMgakViNVMzQVQ5Wnorc1F2dE1odlpWeDN5aXF4Rlc3ay9rUmVTcllS
QzhmZ1c0K3BvNHEyTTRyYXVQZDk4M1plSg0KIyB0YTgvamxoYm93Zk5GZmkyMmRiRWFNT0RnWkJW
dmhxRVFuWVVUS2VHRHJZS0gyWFdwU3g0dkZqWktMWVpIUkt4DQojIE5kZmZsYmd2d2dMM1hCZHpQ
TVJNK2lZV09zWlVIRmROTmxmazJFdFFieXB1S0kwdXdic1dzdk5UZkJpeUhQVTMNCiMgb1pBZlg2
bm5ZWFJUTzNUa1lqeDhnSGk2Ull1RWxxdVZwdzU5YmxKWnlqMUlsbkFjSnZFQWtFdlZsSUI1T1By
UQ0KIyB2VXBFYVNEaTNBVGRJa0poWWwvNkcvc3V2TFN4cnEvcE43c3FWSXFxNGwwL1Nxbnh0Y2l0
bGExd0s5eW9BaTNvDQojIFp1SlU1ekNDQmdvd2dnVHlvQU1DQVFJQ0VGSUE1YW9sVnZ3YWh1Mld5
ZFJMTThjd0RRWUpLb1pJaHZjTkFRRUYNCiMgQlFBd2djb3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZR
WURWUVFLRXc1V1pYSnBVMmxuYml3Z1NXNWpMakVmTUIwRw0KIyBBMVVFQ3hNV1ZtVnlhVk5wWjI0
Z1ZISjFjM1FnVG1WMGQyOXlhekU2TURnR0ExVUVDeE14S0dNcElESXdNRFlnDQojIFZtVnlhVk5w
WjI0c0lFbHVZeTRnTFNCR2IzSWdZWFYwYUc5eWFYcGxaQ0IxYzJVZ2IyNXNlVEZGTUVNR0ExVUUN
CiMgQXhNOFZtVnlhVk5wWjI0Z1EyeGhjM01nTXlCUWRXSnNhV01nVUhKcGJXRnllU0JEWlhKMGFX
WnBZMkYwYVc5dQ0KIyBJRUYxZEdodmNtbDBlU0F0SUVjMU1CNFhEVEV3TURJd09EQXdNREF3TUZv
WERUSXdNREl3TnpJek5UazFPVm93DQojIGdiUXhDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWURWUVFL
RXc1V1pYSnBVMmxuYml3Z1NXNWpMakVmTUIwR0ExVUUNCiMgQ3hNV1ZtVnlhVk5wWjI0Z1ZISjFj
M1FnVG1WMGQyOXlhekU3TURrR0ExVUVDeE15VkdWeWJYTWdiMllnZFhObA0KIyBJR0YwSUdoMGRI
QnpPaTh2ZDNkM0xuWmxjbWx6YVdkdUxtTnZiUzl5Y0dFZ0tHTXBNVEF4TGpBc0JnTlZCQU1UDQoj
IEpWWmxjbWxUYVdkdUlFTnNZWE56SURNZ1EyOWtaU0JUYVdkdWFXNW5JREl3TVRBZ1EwRXdnZ0Vp
TUEwR0NTcUcNCiMgU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRDFJMHRlcGRlS3V6THAx
RmYzNytUSEpuNnRHWmorcUoxOQ0KIyBsUFkyYXhEWGRZRXdmd1JvZjhzcmRSN05IUWlNMzJtVXB6
ZWpuSHVBNEpuaDdqZE5YODQ3Rk82RzFORDFKelc4DQojIEpRczRwNHhqblJlakNLV3JzUHZOYW1L
Q1ROVWgyaHZaOGVPRU80b3FUNFZia0FGUHlhZDJFSDhuQTN5K3JuNTkNCiMgd2QzNUJid2JTSnhw
NThDa1BEeEJBRDdmbHVYRjVKUngxbFVCeHdBbVNrQTh0YUVtcVF5bmJZQ09rQ1Y3ejc4Lw0KIyBI
T3N2bHZybGgzZkd0VmF5ZWp0VU1GTWIzMkkwL3g3UjlGcVRLSVhsVEJkT2ZsdjlwSk9aZjkvTjc2
UjE3KzhWDQojIDlrZm4rQmx5MkM0MEdxYTBwMHgrdmJ0UEREMVg4VERXcGphTzFvQjIxeGt1cGMx
K05DMkpBZ01CQUFHamdnSCsNCiMgTUlJQitqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNSEFH
QTFVZElBUnBNR2N3WlFZTFlJWklBWWI0UlFFSA0KIyBGd013VmpBb0JnZ3JCZ0VGQlFjQ0FSWWNh
SFIwY0hNNkx5OTNkM2N1ZG1WeWFYTnBaMjR1WTI5dEwyTndjekFxDQojIEJnZ3JCZ0VGQlFjQ0Fq
QWVHaHhvZEhSd2N6b3ZMM2QzZHk1MlpYSnBjMmxuYmk1amIyMHZjbkJoTUE0R0ExVWQNCiMgRHdF
Qi93UUVBd0lCQmpCdEJnZ3JCZ0VGQlFjQkRBUmhNRitoWGFCYk1Ga3dWekJWRmdscGJXRm5aUzlu
YVdZdw0KIyBJVEFmTUFjR0JTc09Bd0lhQkJTUDVkTWFocXlOam12RHo0QnExRWdZTEhzWkxqQWxG
aU5vZEhSd09pOHZiRzluDQojIGJ5NTJaWEpwYzJsbmJpNWpiMjB2ZG5Oc2IyZHZMbWRwWmpBMEJn
TlZIUjhFTFRBck1DbWdKNkFsaGlOb2RIUncNCiMgT2k4dlkzSnNMblpsY21semFXZHVMbU52YlM5
d1kyRXpMV2MxTG1OeWJEQTBCZ2dyQmdFRkJRY0JBUVFvTUNZdw0KIyBKQVlJS3dZQkJRVUhNQUdH
R0doMGRIQTZMeTl2WTNOd0xuWmxjbWx6YVdkdUxtTnZiVEFkQmdOVkhTVUVGakFVDQojIEJnZ3JC
Z0VGQlFjREFnWUlLd1lCQlFVSEF3TXdLQVlEVlIwUkJDRXdINlFkTUJzeEdUQVhCZ05WQkFNVEVG
WmwNCiMgY21sVGFXZHVUVkJMU1MweUxUZ3dIUVlEVlIwT0JCWUVGTStacWVwN0p2Ukx5WTZQMS9B
Rkp1L2owcWVkTUI4Rw0KIyBBMVVkSXdRWU1CYUFGSC9UWmFmQzNleTc4REFKODBNNStnS3ZNekV6
TUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCDQojIEFRQldJdVkwcE1SaHkwaTVBYTFXcUdRUDJZeVJ4
THZNRE9XdGVxQWlmOTlIT0VvdGJORi9jUnA4N0hDcHNmQlANCiMgNUE4TVUvb1ZYdjUwbUVra2hZ
RW1ISkVVUjdCTVk0eTdvVFRVeGtYb0RZVW1jd1BRcVl4a2JkeHhrdVpGQldBVg0KIyBXVkU1L0Zn
VWEvN1VwTzE1YXdnTVFYTG5OeUlHQ2I0ajZUOUVtaDdwWVozTXNaQmMvRDNTamF4Q1BXVTIxTFE5
DQojIFFDaVBteERQSXliTVN5RExrQjlkakV3MHlqelk1VGZXYjZVZ3ZUVHJKdG11RGVmRm12ZWh0
Q0dSTTIrRzZGaTcNCiMgSlh4MERsaitkUnRqUDg0eGZKdVBHNWFleFZOMmhGdWNyWkg2ck8yVHVs
M0lJVlBDZ2xOanJ4SU5VSWNSR3oxVQ0KIyBVcGFLTEp3OWtob0ltZ1V1eDVPbFNKSFRNWUlDYXpD
Q0FtY0NBUUV3Z2Nrd2diUXhDekFKQmdOVkJBWVRBbFZUDQojIE1SY3dGUVlEVlFRS0V3NVdaWEpw
VTJsbmJpd2dTVzVqTGpFZk1CMEdBMVVFQ3hNV1ZtVnlhVk5wWjI0Z1ZISjENCiMgYzNRZ1RtVjBk
Mjl5YXpFN01Ea0dBMVVFQ3hNeVZHVnliWE1nYjJZZ2RYTmxJR0YwSUdoMGRIQnpPaTh2ZDNkMw0K
IyBMblpsY21semFXZHVMbU52YlM5eWNHRWdLR01wTVRBeExqQXNCZ05WQkFNVEpWWmxjbWxUYVdk
dUlFTnNZWE56DQojIElETWdRMjlrWlNCVGFXZHVhVzVuSURJd01UQWdRMEVDRURFa1hGYW5USDZY
MUxuUjkvUUMvZ0l3Q1FZRkt3NEQNCiMgQWhvRkFLQjRNQmdHQ2lzR0FRUUJnamNDQVF3eENqQUlv
QUtBQUtFQ2dBQXdHUVlKS29aSWh2Y05BUWtETVF3Rw0KIyBDaXNHQVFRQmdqY0NBUVF3SEFZS0t3
WUJCQUdDTndJQkN6RU9NQXdHQ2lzR0FRUUJnamNDQVJVd0l3WUpLb1pJDQojIGh2Y05BUWtFTVJZ
RUZIRWpFclJYTkM1dWMrbXZEd0I2blBxcUFISWRNQTBHQ1NxR1NJYjNEUUVCQVFVQUJJSUINCiMg
QUtpRHpsQm1jTm9Sa0xDck54cHRRem1ITEU2OHlaSmZwbDRkcjhVbHpLcXRQWk1aSCsrd2FVeG95
QzJSVEEweQ0KIyBQMkhIQkhtTU1URWpCdTBlbzVPMDU2UlhiRnJCVGF4UWY3MzhuMzM1SG1ENEEy
R1VXNFgvQmZEd2svbUxDKzVlDQojIGY1VG96WkI1N05MZnYrRWYzTG94RDBzREtQckYwWTFGTWFL
L2xyWUhUN0FxWEV6MGVPQlhZWVZHRUtNNytwOEwNCiMgdFV0ek9UcjlpVjVSdEsyYkVpMS9LcFdp
TVRWOVVEWWV1VXVEVnNVcmlXSmpvRFY0S25mRElJT2hNdnhwZEpuYg0KIyBxTUJmZWZyalUxMkhm
RCsvaHVPd1pTNVNWWmRlTXZ5cmlzL2RIOE9wYjdCM2hQOWpyRDlnaWdEV2U1YXRmdmRvDQojIFVj
VDJUWlFjanAxazZpUkI2Q3FyYitRPQ0KIyBTSUcgIyBFbmQgc2lnbmF0dXJlIGJsb2NrDQo="""

collectcert = """PCMNCi5TWU5PUFNJUw0KICAgIFJldHJpZXZlcyBhbGwgcm9vdCBsZXZlbCBjZXJ0aWZpY2F0ZXMg
b24gdGhlIHN5c3RlbQ0KLkRFU0NSSVBUSU9ODQogICAgVGhpcyBzY3JpcHQgcmV0cmlldmVzIGFs
bCByb290IGxldmVsIGNlcnRpZmljYXRlcyBvbiB0aGUgc3lzdGVtDQoJYW5kIG91dHB1dCdzIHRo
ZW0gdG8gdGhlIGNvbnNvbGUgZm9yIHRoZSBhZ2VudCB0byBzZW5kIHRvIHRoZSBzZXJ2ZXIuDQoN
CglUaGlzIHNjcmlwdCBpcyB1c2VkIHRvIGNvbGxlY3QgYWxsIHRoZSBpdGVtcyBmcm9tIHRoZSBD
RVJUOiBkcml2ZSwgd2hpY2ggaXMgdGhlIHVzZXJzDQoJY2VydGlmaWNhdGUgbGlicmFyeS4gIFRo
ZXkgY2FuIGhhdmUgU3lzdGVtIGFuZCBVc2VyIGNlcnRpZmljYXRlcy4gIFRoZSByZXR1cm4gZnJv
bSANCglHZXQtQ2hpbGRJdGVtIGNlcnQ6XCBpcyBhIG1peGVkIGNvbGxlY3Rpb24gb2YgU3RvcmUg
bG9jYXRpb25zLCBTdG9yZXMgYW5kIENlcnRpZmljYXRlcy4NCglJIHN0b3JlIHRoZSBuYW1lIG9m
IHRoZSBzdG9yZSBsb2NhdGlvbiBhbmQgc3RvcmUgZm9yIHRoZSBvdXRwdXQgb2YgZWFjaCBjZXJ0
aWZpY2F0ZQ0KCWl0IGNvbnRhaW5zLg0KDQouTk9URVMNCk5hbWU6IEdldENlcnRpZmljYXRlSW5m
bw0KQXV0aG9yOiBEYXZpZCBTdGlkb2xwaA0KRGF0ZUNyZWF0ZWQ6IDYvMy8yMDE1DQoNCk9VVFBV
VA0KPT09PT09DQoxMDAxMDEgI0V2ZW50IElEDQojIHRoZSBmb2xsb3dpbmcgd291bGQgYmUgb24g
b25lIGxpbmUgd2l0aCAnfCcgc2VwZXJhdGluZyB0aGVtDQpMb2NhbE1hY2hpbmUgI1N0b3JlTG9j
YXRpb24NClJvb3QgI1N0b3JlDQpDTj10aGF3dGUgUHJpbWFyeSBSb290IENBIC0gRzMsIE9VPSIo
YykgMjAwOCB0aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seSIsIE9VPUNlcnRp
ZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24sIE89InRoYXd0ZSwgSW5jLiIsIEM9VVMgIyBTdWJq
ZWN0DQo2MDAxOTdCNzQ2QTdFQUI0QjQ5QUQ2NEIyRkY3OTBGQiAjU2VyaWFsTnVtYmVyDQpGMThC
NTM4RDFCRTkwM0I2QTZGMDU2NDM1QjE3MTU4OUNBRjM2QkYyICNUaHVtYnByaW50DQo0LzAxLzIw
MDggMTk6MDA6MDAgI05vdEJlZm9yZQ0KMTIvMDEvMjAzNyAxNzo1OTo1OSAjTm90QWZ0ZXINCkNO
PXRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EgLSBHMywgT1U9IihjKSAyMDA4IHRoYXd0ZSwgSW5jLiAt
IEZvciBhdXRob3JpemVkIHVzZSBvbmx5IiwgT1U9Q2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZp
c2lvbiwgTz0idGhhd3RlLCBJbmMuIiwgQz1VUyAjSXNzdWVyDQp0aGF3dGUgUHJpbWFyeSBSb290
IENBIC0gRzMgI0ZyaWVuZGx5TmFtZQ0KCQ0KIz4NCiRldmVudElEID0gMTAwMTAxDQoNCiNGaXgg
b3V0cHV0IHRvIE5PVCBwdXQgbGluZSBicmVha3MgaW4gdGhlIG91dHB1dCAob2ssIGFmdGVyIDRr
IGNvbHVtbnMgaXQgd2lsbCkNCmlmKCAkSG9zdCAtYW5kICRIb3N0LlVJIC1hbmQgJEhvc3QuVUku
UmF3VUkgKSB7DQoJJHJhd1VJID0gJEhvc3QuVUkuUmF3VUkNCgkkb2xkU2l6ZSA9ICRyYXdVSS5C
dWZmZXJTaXplDQoJJHR5cGVOYW1lID0gJG9sZFNpemUuR2V0VHlwZSggKS5GdWxsTmFtZQ0KCSRu
ZXdTaXplID0gTmV3LU9iamVjdCAkdHlwZU5hbWUgKDQwOTYsICRvbGRTaXplLkhlaWdodCkNCgkk
cmF3VUkuQnVmZmVyU2l6ZSA9ICRuZXdTaXplDQp9DQoNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQojdGhl
c2UgYXJlIHV0aWxpdHkgbWV0aG9kcyBmb3IgZG9pbmcgY29tbW9uIHRhc2tzIGZvciBaaWZ0ZW4g
ZXh0ZW5zaW9uIHNjcmlwdHMNCiNwb3dlcnNoZWxsIHZlcnNpb24gKG9ubHkgd29ya3MgZm9yIDIg
YW5kIHVwKQ0KJHBzdmVyc2lvbiA9ICRQU1ZlcnNpb25UYWJsZS5QU1ZlcnNpb24NCiNnZXQgdGhl
IG5hbWUgb2YgdGhpcyBzY3JpcHQsIHNlcnZlcyBhcyBiYXNlIGZvciB0aGluZ3MNCiRzY3JpcHRO
YW1lID0gc3BsaXQtcGF0aCAtTGVhZiAkTXlJbnZvY2F0aW9uLk15Q29tbWFuZC5EZWZpbml0aW9u
DQojZ2V0IHRoZSBkaXJlY3Rvcnkgb2YgdGhpcyBzY3JpcHQsIHdoaWNoIGNvdWxkIGJlIHVzZWQg
Zm9yIHRlbXAgZmlsZXMNCiRzY3JpcHRQYXRoID0gc3BsaXQtcGF0aCAtcGFyZW50ICRNeUludm9j
YXRpb24uTXlDb21tYW5kLkRlZmluaXRpb24NCiNnZXQgdGhlIG5hbWUgb2YgdGhlICdiZWdpbicg
YW5kICdlbmQnIGV2ZW50cywgd2hpY2ggYXJlIHVzZWQgd2hlbiBydW5uaW5nICdwZXJzaXN0ZW50
J2x5IChvbmx5KQ0KJGJlZ2luRXZlbnROYW1lID0gKCAiR2xvYmFsXCIgKyAkc2NyaXB0TmFtZSAr
ICIuYmVnaW4iICkNCiRlbmRFdmVudE5hbWUgPSAoICJHbG9iYWxcIiArICRzY3JpcHROYW1lICsg
Ii5lbmQiICkNCg0KI3N0YW5kYXJkIG1ldGhvZCBvZiBlbWl0dGluZyBleHRlbnNpb24gcmVzdWx0
cw0KZnVuY3Rpb24gRW1pdEV4dGVuc2lvblJlc3VsdHMNCnsNCglwYXJhbSAoDQoJCVtpbnRdJGV2
ZW50Q29kZSwgI3RoZSByZXF1aXJlZCBsdWNhc2lhbiBldmVudCBjb2RlDQoJCVtTeXN0ZW0uQ29s
bGVjdGlvbnMuQXJyYXlMaXN0XSRyZXN1bHRTZXQgI3RoZSBvcHRpb25hbCBzZXQgb2YgbXVsdGkt
dmFsdWVkIGRhdGENCgkpDQogDQoJV3JpdGUtT3V0cHV0ICI9PT09IEJFR0lOIEVYVEVOU0lPTiBS
RVNVTFRTID09PT0iDQoJV3JpdGUtT3V0cHV0ICRldmVudENvZGUNCg0KCWlmICgkcmVzdWx0U2V0
IC1uZSAkbnVsbCkgI2Fic3VyZA0KCXsNCgkJZm9yZWFjaCAoICRyb3cgaW4gJHJlc3VsdHNldCAp
DQoJCXsNCgkJCWlmICgkcm93IC1uZSAkbnVsbCkgI3ByZXBvc3Rlcm91cw0KICAgICAgICAgICAg
ew0KICAgICAgICAgICAgICAgIFtzdHJpbmddJHJvd3RleHQgPSAiIg0KICAgICAgICAgICAgICAg
IGZvcmVhY2ggKCAkZmllbGQgaW4gJHJvdyApDQogICAgICAgICAgICAgICAgew0KICAgICAgICAg
ICAgICAgICAgICAjZmllbGQgc2VwIGlmIG5vdCBmaXJzdCBpdGVtDQogICAgICAgICAgICAgICAg
ICAgIGlmICggMCAtbmUgJHJvd3RleHQubGVuZ3RoICkNCiAgICAgICAgICAgICAgICAgICAgew0K
ICAgICAgICAgICAgICAgICAgICAgICAgJHJvd3RleHQgKz0gInwiDQogICAgICAgICAgICAgICAg
ICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKCRmaWVsZCAtZXEgJG51bGwpICNjb25jZWl2
YWJsZQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAjbnVs
bCBvYmplY3RzIGp1c3QgdHJhbnNsYXRlIHRvIHRoZSBlbXB0eSBmaWVsZA0KICAgICAgICAgICAg
ICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICAgICAg
ew0KICAgICAgICAgICAgICAgICAgICAgICAgI2VzY2FwZSBmaWVsZA0KICAgICAgICAgICAgICAg
ICAgICAgICAgW3N0cmluZ10kZmllbGR0ZXh0ID0gJGZpZWxkDQogICAgICAgICAgICAgICAgICAg
ICAgICAkZmllbGR0ZXh0ID0gJGZpZWxkdGV4dCAtcmVwbGFjZSAnW1xcXScsJ1xcJw0KICAgICAg
ICAgICAgICAgICAgICAgICAgJGZpZWxkdGV4dCA9ICRmaWVsZHRleHQgLXJlcGxhY2UgJ1tcfF0n
LCAnXHwnDQogICAgICAgICAgICAgICAgICAgICAgICAkZmllbGR0ZXh0ID0gJGZpZWxkdGV4dCAt
cmVwbGFjZSAnW1xyXScsICJcYHIiDQogICAgICAgICAgICAgICAgICAgICAgICAkZmllbGR0ZXh0
ID0gJGZpZWxkdGV4dCAtcmVwbGFjZSAnW1xuXScsICJcYG4iDQogICAgICAgICAgICAgICAgICAg
ICAgICAkcm93dGV4dCArPSAkZmllbGR0ZXh0DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAg
ICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgV3JpdGUtT3V0cHV0ICRyb3d0ZXh0DQogICAg
ICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQogICAgV3JpdGUtT3V0cHV0ICI9PT09IEVORCBF
WFRFTlNJT04gUkVTVUxUUyA9PT09Ig0KICAgIHJldHVybg0KfQ0KDQojaW4gJ3BlcnNpc3RlbnQn
IG1vZGUsIG91ciBwcm9jZXNzIGlzIGV4cGVjdGVkIHRvIGxpdmUgYSBsb25nIHdoaWxlLCBwcm9k
dWNpbmcNCiNtdWx0aXBsZSByZXN1bHQgc2V0cy4gSW4gdGhpcyBtb2RlLCB0aGUgaG9zdCBwcm9j
ZXNzIChpLmUuIHRoZSBBZ2VudCkgd2lsbA0KI3VzZSBldmVudHMgdG8gY29udmV5IHRvIHVzOiBh
KSB0aW1lIHRvIHJ1biAobWF5YmUgZ2VuZXJhdGluZyBhIHJlc3VsdCBzZXQpLA0KI2FuZCBiKSB0
aW1lIHRvIHRlcm1pbmF0ZS4NCiNnZXQgb3VyIGJlZ2luIGFuZCBlbmQgZXZlbnQgaGFuZGxlcywg
aWYgcG9zc2libGUgKGkuZS4sIG9ubHkgaWYgd2UgYXJlIGJlaW5nIHJ1biAncGVyc2lzdGVudGx5
JykNCmZ1bmN0aW9uIEdldEV2ZW50SGFuZGxlc0ZvclBlcnNpc3RlbnRNb2RlDQp7DQogICAgJGV2
dEJlZ2luID0gJG51bGwNCiAgICB0cnkgeyAkZXZ0QmVnaW4gPSBbU3lzdGVtLlRocmVhZGluZy5F
dmVudFdhaXRIYW5kbGVdOjpPcGVuRXhpc3RpbmcoJGJlZ2luRXZlbnROYW1lKSB9DQogICAgY2F0
Y2ggeyB9DQogICAgJGV2dEVuZCA9ICRudWxsDQogICAgdHJ5IHsgJGV2dEVuZCA9IFtTeXN0ZW0u
VGhyZWFkaW5nLkV2ZW50V2FpdEhhbmRsZV06Ok9wZW5FeGlzdGluZygkZW5kRXZlbnROYW1lKSB9
DQogICAgY2F0Y2ggeyB9DQogICAgDQogICAgaWYgKCAoICRldnRCZWdpbiAtbmUgJG51bGwgKSAt
YW5kICggJGV2dEVuZCAtbmUgJG51bGwgKSApDQogICAgew0KICAgICAgICAkdHJ1ZQ0KICAgICAg
ICAkZXZ0QmVnaW4NCiAgICAgICAgJGV2dEVuZA0KICAgIH0NCiAgICBlbHNlDQogICAgew0KICAg
ICAgICAkZmFsc2UNCiAgICAgICAgJG51bGwNCiAgICAgICAgJG51bGwNCiAgICB9DQp9DQoNCiNp
biAncGVyc2lzdGVudCcgbW9kZSwgb3VyIHByb2Nlc3MgaXMgZXhwZWN0ZWQgdG8gbGl2ZSBhIGxv
bmcgd2hpbGUsIHByb2R1Y2luZw0KI211bHRpcGxlIHJlc3VsdCBzZXRzLiBJbiB0aGlzIG1vZGUs
IHRoZSBob3N0IHByb2Nlc3MgKGkuZS4gdGhlIEFnZW50KSB3aWxsDQojdXNlIGV2ZW50cyB0byBj
b252ZXkgdG8gdXM6IGEpIHRpbWUgdG8gcnVuIChtYXliZSBnZW5lcmF0aW5nIGEgcmVzdWx0IHNl
dCksDQojYW5kIGIpIHRpbWUgdG8gdGVybWluYXRlLg0KI2dldCBvdXIgYmVnaW4gYW5kIGVuZCBl
dmVudCBoYW5kbGVzLCBpZiBwb3NzaWJsZSAoaS5lLiwgb25seSBpZiB3ZSBhcmUgYmVpbmcgcnVu
ICdwZXJzaXN0ZW50bHknKQ0KZnVuY3Rpb24gR2V0RXZlbnRIYW5kbGVzRm9yUGVyc2lzdGVudE1v
ZGUNCnsNCiAgICAkZXZ0QmVnaW4gPSAkbnVsbA0KICAgIHRyeSB7ICRldnRCZWdpbiA9IFtTeXN0
ZW0uVGhyZWFkaW5nLkV2ZW50V2FpdEhhbmRsZV06Ok9wZW5FeGlzdGluZygkYmVnaW5FdmVudE5h
bWUpIH0NCiAgICBjYXRjaCB7IH0NCiAgICAkZXZ0RW5kID0gJG51bGwNCiAgICB0cnkgeyAkZXZ0
RW5kID0gW1N5c3RlbS5UaHJlYWRpbmcuRXZlbnRXYWl0SGFuZGxlXTo6T3BlbkV4aXN0aW5nKCRl
bmRFdmVudE5hbWUpIH0NCiAgICBjYXRjaCB7IH0NCiAgICANCiAgICBpZiAoICggJGV2dEJlZ2lu
IC1uZSAkbnVsbCApIC1hbmQgKCAkZXZ0RW5kIC1uZSAkbnVsbCApICkNCiAgICB7DQogICAgICAg
ICR0cnVlDQogICAgICAgICRldnRCZWdpbg0KICAgICAgICAkZXZ0RW5kDQogICAgfQ0KICAgIGVs
c2UNCiAgICB7DQogICAgICAgICRmYWxzZQ0KICAgICAgICAkbnVsbA0KICAgICAgICAkbnVsbA0K
ICAgIH0NCn0NCg0KI3RoZXNlIHRyaXZpYWwgaGVscGVycyBhcmUgaGVyZSBtb3N0bHkgZm9yIGRv
Y3VtZW50YXRpb247IG9idmlvdXNseSB0aGV5IGFyZSB0cml2aWFsDQojY3JlYXRlIHJlc3VsdCBz
ZXQNCmZ1bmN0aW9uIENyZWF0ZVJlc3VsdFNldA0Kew0KICAgIE5ldy1PYmplY3QgU3lzdGVtLkNv
bGxlY3Rpb25zLkFycmF5TGlzdA0KfQ0KI2NyZWF0ZSByZXN1bHQgc2V0IHJvdw0KZnVuY3Rpb24g
Q3JlYXRlUmVzdWx0U2V0Um93DQp7DQogICAgTmV3LU9iamVjdCBTeXN0ZW0uQ29sbGVjdGlvbnMu
QXJyYXlMaXN0DQp9DQojYWRkIHJvdyBpdGVtDQpmdW5jdGlvbiBBZGRSb3dJdGVtICggW1N5c3Rl
bS5Db2xsZWN0aW9ucy5BcnJheUxpc3RdJHJvdywgW3N0cmluZ10kaXRlbSApDQp7DQogICAgW3Zv
aWRdJHJvdy5BZGQoICRpdGVtICkNCn0NCiNhZGQgcm93DQpmdW5jdGlvbiBBZGRSb3cgKCBbU3lz
dGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdF0kcmVzdWx0c2V0LCBbU3lzdGVtLkNvbGxlY3Rpb25z
LkFycmF5TGlzdF0kcm93ICkNCnsNCiAgICBbdm9pZF0kcmVzdWx0c2V0LkFkZCggJHJvdyApDQp9
DQoNCkZ1bmN0aW9uIFNjYW5DZXJ0aWZpY2F0ZXMNCnsNCgkkc3RvcmVMb2NhdGlvbiA9ICIiDQoJ
JHN0b3JlID0gIiINCgkkcmVzdWx0U2V0ID0gQ3JlYXRlUmVzdWx0U2V0DQoJJHRodW1icHJpbnRz
ID0gQCgpDQoJJGFsbENlcnRJbmZvID0gR2V0LUNoaWxkSXRlbSAtUmVjdXJzZSBjZXJ0OlwNCgkj
IFdlIGhhdmUgdGhlIGNvbGxlY3Rpb24sIHNvIHdhbGsgdGhyb3VnaCBpdA0KCWZvcmVhY2ggKCRj
ZXJ0IGluICRhbGxDZXJ0SW5mbykNCgl7DQoJCSMgVXNlIHRoZSB0eXBlIG9mIG9iamVjdCBhbmQg
Z2V0IGFwcHJvcHJpYXRlIGluZm9ybWF0aW9uDQoJCWlmICgkY2VydC5HZXRUeXBlKCkuRnVsbE5h
bWUgLWVxICJNaWNyb3NvZnQuUG93ZXJTaGVsbC5Db21tYW5kcy5YNTA5U3RvcmVMb2NhdGlvbiIp
DQoJCXsNCgkJCSRzdG9yZUxvY2F0aW9uID0gJGNlcnQuTG9jYXRpb25OYW1lDQoJCX0NCgkJZWxz
ZWlmICgkY2VydC5HZXRUeXBlKCkuRnVsbE5hbWUgLWVxICJTeXN0ZW0uU2VjdXJpdHkuQ3J5cHRv
Z3JhcGh5Llg1MDlDZXJ0aWZpY2F0ZXMuWDUwOVN0b3JlIikNCgkJew0KCQkJJHN0b3JlID0gJGNl
cnQuTmFtZQ0KCQl9DQoJCWVsc2VpZiAoJGNlcnQuR2V0VHlwZSgpLkZ1bGxOYW1lIC1lcSAiU3lz
dGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5YNTA5Q2VydGlmaWNhdGVzLlg1MDlDZXJ0aWZpY2F0
ZTIiKQ0KCQl7DQoJCQlpZiAoJHRodW1icHJpbnRzIC1tYXRjaCAkY2VydC5UaHVtYnByaW50KSB7
DQoJCQl9IGVsc2Ugew0KCQkJCSRyb3cgPSBDcmVhdGVSZXN1bHRTZXRSb3cNCgkJCQlBZGRSb3dJ
dGVtICRyb3cgJHN0b3JlTG9jYXRpb24NCgkJCQlBZGRSb3dJdGVtICRyb3cgJHN0b3JlDQoJCQkJ
QWRkUm93SXRlbSAkcm93ICRjZXJ0LlN1YmplY3QNCgkJCQlBZGRSb3dJdGVtICRyb3cgJGNlcnQu
U2VyaWFsTnVtYmVyDQoJCQkJQWRkUm93SXRlbSAkcm93ICRjZXJ0LlRodW1icHJpbnQNCgkJCQlB
ZGRSb3dJdGVtICRyb3cgJGNlcnQuTm90QmVmb3JlDQoJCQkJQWRkUm93SXRlbSAkcm93ICRjZXJ0
Lk5vdEFmdGVyDQoJCQkJQWRkUm93SXRlbSAkcm93ICRjZXJ0Lklzc3Vlcg0KCQkJCUFkZFJvd0l0
ZW0gJHJvdyAkY2VydC5GcmllbmRseU5hbWUNCgkJCQlBZGRSb3cgJHJlc3VsdFNldCAkcm93DQoJ
CQkJJHRodW1icHJpbnRzICs9ICRjZXJ0LlRodW1icHJpbnQNCgkJCX0NCgkJfQ0KCQllbHNlDQoJ
CXsNCgkJCSJVbmtub3duIFR5cGUgaW4gY2VydCBjb2xsZWN0aW9uOiAkKCRjZXJ0LkdldFR5cGUo
KS5GdWxsTmFtZSkiDQoJCX0NCgl9DQoJIm5vdyB3ZSBhcmUgZ29pbmcgdG8gb3V0cHV0IHRoZSBy
ZXN1bHQgc2V0Ig0KCUVtaXRFeHRlbnNpb25SZXN1bHRzICRldmVudElEICRyZXN1bHRTZXQNCn0N
Cg0KJGdlaHJldCA9IEdldEV2ZW50SGFuZGxlc0ZvclBlcnNpc3RlbnRNb2RlDQppZiAoIC1ub3Qg
JGdlaHJldFswXSApDQp7DQoJIndlIGFyZSBub3QgaW4gJ3BlcnNpc3RlbnQnIG1vZGUiDQoJU2Nh
bkNlcnRpZmljYXRlcw0KCSJMZWF2aW5nIHNjcmlwdCINCglFeGl0IDANCn0NCmVsc2UNCnsNCgki
d2UgYXJlIGluIHBlcnNpc3RlbnQgbW9kZSINCgkjZXhhbXBsZSBvZiBhIFBFUlNJU1RFTlQgcnVu
IHNjZW5hcmlvDQoJIyh3ZSBhbHJlYWR5IGNhbGxlZCBHZXRFdmVudEhhbmRsZXNGb3JQZXJzaXN0
ZW50TW9kZSBhYm92ZSkNCgkkZXZ0QmVnaW4gPSAkZ2VocmV0WzFdICMoanVzdCBmb3IgcmVhZGFi
aWxpdHkpDQoJJGV2dEVuZCA9ICRnZWhyZXRbMl0gIyhqdXN0IGZvciByZWFkYWJpbGl0eSkNCiAN
Cgkid2FpdCBmb3Igb3VyICdiZWdpbicgZXZlbnQsIHdoaWNoIG1lYW5zIGl0IGlzIHRpbWUgdG8g
cnVuIg0KCXdoaWxlICggJGV2dEJlZ2luLldhaXRPbmUoKSApDQoJew0KCQlpZiAoICRldnRFbmQu
V2FpdE9uZSgwKSApIHsgYnJlYWs7IH0NCgkJU2NhbkNlcnRpZmljYXRlcw0KCX0NCiANCgkiTGVh
dmluZyBzY3JpcHQiDQoJRXhpdCAwDQp9DQoNCiMgU0lHICMgQmVnaW4gc2lnbmF0dXJlIGJsb2Nr
DQojIE1JSVRYUVlKS29aSWh2Y05BUWNDb0lJVFRqQ0NFMG9DQVFFeEN6QUpCZ1VyRGdNQ0dnVUFN
R2tHQ2lzR0FRUUINCiMgZ2pjQ0FRU2dXekJaTURRR0Npc0dBUVFCZ2pjQ0FSNHdKZ0lEQVFBQUJC
QWZ6RHRnV1VzSVRyY2swc1lwZnZOUg0KIyBBZ0VBQWdFQUFnRUFBZ0VBQWdFQU1DRXdDUVlGS3c0
REFob0ZBQVFVc1NMNEZlTGIrc0hOeUl2bVZ2VkNrMUF2DQojIE5sQ2dnaEJjTUlJRTB6Q0NBN3Vn
QXdJQkFnSVFHTnJSbmlaOTZMdEtJVmpOekdzN1NqQU5CZ2txaGtpRzl3MEINCiMgQVFVRkFEQ0J5
akVMTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFvVERsWmxjbWxUYVdkdUxDQkpibU11TVI4dw0K
IyBIUVlEVlFRTEV4WldaWEpwVTJsbmJpQlVjblZ6ZENCT1pYUjNiM0pyTVRvd09BWURWUVFMRXpF
b1l5a2dNakF3DQojIE5pQldaWEpwVTJsbmJpd2dTVzVqTGlBdElFWnZjaUJoZFhSb2IzSnBlbVZr
SUhWelpTQnZibXg1TVVVd1F3WUQNCiMgVlFRREV6eFdaWEpwVTJsbmJpQkRiR0Z6Y3lBeklGQjFZ
bXhwWXlCUWNtbHRZWEo1SUVObGNuUnBabWxqWVhScA0KIyBiMjRnUVhWMGFHOXlhWFI1SUMwZ1J6
VXdIaGNOTURZeE1UQTRNREF3TURBd1doY05Nell3TnpFMk1qTTFPVFU1DQojIFdqQ0J5akVMTUFr
R0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFvVERsWmxjbWxUYVdkdUxDQkpibU11TVI4d0hRWUQNCiMg
VlFRTEV4WldaWEpwVTJsbmJpQlVjblZ6ZENCT1pYUjNiM0pyTVRvd09BWURWUVFMRXpFb1l5a2dN
akF3TmlCVw0KIyBaWEpwVTJsbmJpd2dTVzVqTGlBdElFWnZjaUJoZFhSb2IzSnBlbVZrSUhWelpT
QnZibXg1TVVVd1F3WURWUVFEDQojIEV6eFdaWEpwVTJsbmJpQkRiR0Z6Y3lBeklGQjFZbXhwWXlC
UWNtbHRZWEo1SUVObGNuUnBabWxqWVhScGIyNGcNCiMgUVhWMGFHOXlhWFI1SUMwZ1J6VXdnZ0Vp
TUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdg0KIyBKQWdJS1hvMW5tQU1x
dWRMTzA3Y2ZMdzhSUnk3SytEK0tRTDVWd2lqWklVVkovWHhyY2d4aVYwaTZDcXFwa0t6DQojIGov
aTVWYmV4dDB1ei9vOStCMWZzNzBQYlptSVZZYzlnRGFUWTN2amd3MklJUFZRVDYwbktXVlNGSnVV
cmp4dWYNCiMgNi9XaGtjSXpTZGhEWTJwU1M5S1A2SEJSVGRHSmFYdkhjUGF6M0JKMDIzdGRTMWJU
bHI4VmQ2R3c5S0lsOHE4Yw0KIyBrbWNZNWZRR0JPK1F1ZVFBNU4wNnRSbi9BcnIwUE83Z2krczNp
K3owMTZ6eTl2QTlyOTExa1RNWkhSeEF5M1FrDQojIEdTR1QyUlQrckNwU3g0L1ZCRW5raldOSGlE
eHBnOHYrUjcwcmZrL0ZsYTRPbmRUUlE4Qm5jK01VQ0g3bFA1OXoNCiMgdURNS3oxMC9OSWVXaXU1
VDZDVVZBZ01CQUFHamdiSXdnYTh3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVg0KIyBIUThC
QWY4RUJBTUNBUVl3YlFZSUt3WUJCUVVIQVF3RVlUQmZvVjJnV3pCWk1GY3dWUllKYVcxaFoyVXZa
MmxtDQojIE1DRXdIekFIQmdVckRnTUNHZ1FVaitYVEdvYXNqWTVydzgrQWF0UklHQ3g3R1M0d0pS
WWphSFIwY0RvdkwyeHYNCiMgWjI4dWRtVnlhWE5wWjI0dVkyOXRMM1p6Ykc5bmJ5NW5hV1l3SFFZ
RFZSME9CQllFRkgvVFphZkMzZXk3OERBSg0KIyA4ME01K2dLdk16RXpNQTBHQ1NxR1NJYjNEUUVC
QlFVQUE0SUJBUUNUSkVvd1gyTFAyQnFZTHozcTNKa3R2WGYyDQojIHBYa2lPT3pFcDZCNEVxMWlE
a1Z3Wk1YbmwyWXRtQWwrWDYvV3pDaGw4Z0dxQ0JwSDN2bjVmSkphQ0drZ0RkaysNCiMgYlc0OERX
N1k1Z2FSUUJpNStNSHQzOXRCcXVDV0lNbk5aQlU0Z2NtVTdxS0VLUXNUYjQ3YkROMGxBdHVraXhs
RQ0KIyAwa0Y2QldsS1dFOWd5bjZDYWdzQ3FpVVhPYlhiZitlRVpTcVZpcjJHM2w2QkZvTXRFTXpl
L2FpQ0ttMG9IdzBMDQojIHhPWG5HaVlaNGZRUmJ4QzFsZnpuUWdVeTI4NmRVVjRvdHA2RjAxdnZw
WDFGUUhLT3R3NXJEZ2I3TXpWSWNiaWQNCiMgSjR2RVpWOE5obmFjUkhyMmxWejJYVElJTTZSVXRo
Zy9hRnp5UWtxRk9GU0RYOUhvTFBLc0VkYW83V05xTUlJRg0KIyBjekNDQkZ1Z0F3SUJBZ0lRTVNS
Y1ZxZE1mcGZVdWRIMzlBTCtBakFOQmdrcWhraUc5dzBCQVFVRkFEQ0J0REVMDQojIE1Ba0dBMVVF
QmhNQ1ZWTXhGekFWQmdOVkJBb1REbFpsY21sVGFXZHVMQ0JKYm1NdU1SOHdIUVlEVlFRTEV4WlcN
CiMgWlhKcFUybG5iaUJVY25WemRDQk9aWFIzYjNKck1Uc3dPUVlEVlFRTEV6SlVaWEp0Y3lCdlpp
QjFjMlVnWVhRZw0KIyBhSFIwY0hNNkx5OTNkM2N1ZG1WeWFYTnBaMjR1WTI5dEwzSndZU0FvWXlr
eE1ERXVNQ3dHQTFVRUF4TWxWbVZ5DQojIGFWTnBaMjRnUTJ4aGMzTWdNeUJEYjJSbElGTnBaMjVw
Ym1jZ01qQXhNQ0JEUVRBZUZ3MHhOREF6TWpVd01EQXcNCiMgTURCYUZ3MHhOakEwTWpNeU16VTVO
VGxhTUlHMk1Rc3dDUVlEVlFRR0V3SlZVekVPTUF3R0ExVUVDQk1GVkdWNA0KIyBZWE14RHpBTkJn
TlZCQWNUQmtGMWMzUnBiakVpTUNBR0ExVUVDaFFaV21sbWRHVnVJRlJsWTJodWIyeHZaMmxsDQoj
IGN5d2dTVzVqTGpFK01Ed0dBMVVFQ3hNMVJHbG5hWFJoYkNCSlJDQkRiR0Z6Y3lBeklDMGdUV2xq
Y205emIyWjANCiMgSUZOdlpuUjNZWEpsSUZaaGJHbGtZWFJwYjI0Z2RqSXhJakFnQmdOVkJBTVVH
VnBwWm5SbGJpQlVaV05vYm05cw0KIyBiMmRwWlhNc0lFbHVZeTR3Z2dFaU1BMEdDU3FHU0liM0RR
RUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzZNbENrDQojIENzMHBWeTBrV21YRTdMaGdNdXdFQWNU
Mkl4RzZmenJMUHpPVGhwUjdHUEFKWUtHMFRzN0d4MFZZcjFIMjFWcW0NCiMgekZoY210NS9BNGZP
bGVEM3J5Vi92aUlLTEZ4d0JxVDRJL1RFSVBCdDZUT0NsT0pwZ2FzQUxaaCtzRk02Q3RwaA0KIyB6
b2hHWDRBa3U1SmMzdXZTVVVDaW5HSVVoUldhMXJVUUt0MTMzWUZFQXZDeitFTTlGVVF4M3EzMDl5
UFozUkh1DQojIERaZnRzVitiMWhUeU85Z05SSlRaMVlsdmFadlJySHJEWkVKK0Q3czlXZ1U4eGhL
M2g3QkQvTU96QVlVOU5IY3INCiMgRzZmNHQ5KzJFUnNsMHVwYkl1K0x4cEtJbzU4SWE2R0xLVnRZ
V1dEQ3llcXg2Mi9vZE80elB5cERSY1podkc4Lw0KIyBnRzI4dWFOcDVhL29RVEROQWdNQkFBR2pn
Z0Y3TUlJQmR6QUpCZ05WSFJNRUFqQUFNQTRHQTFVZER3RUIvd1FFDQojIEF3SUhnREJBQmdOVkhS
OEVPVEEzTURXZ002QXhoaTlvZEhSd09pOHZZM05qTXkweU1ERXdMV055YkM1MlpYSnANCiMgYzJs
bmJpNWpiMjB2UTFORE15MHlNREV3TG1OeWJEQkVCZ05WSFNBRVBUQTdNRGtHQzJDR1NBR0crRVVC
QnhjRA0KIyBNQ293S0FZSUt3WUJCUVVIQWdFV0hHaDBkSEJ6T2k4dmQzZDNMblpsY21semFXZHVM
bU52YlM5eWNHRXdFd1lEDQojIFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdNd2NRWUlLd1lCQlFVSEFR
RUVaVEJqTUNRR0NDc0dBUVVGQnpBQmhoaG8NCiMgZEhSd09pOHZiMk56Y0M1MlpYSnBjMmxuYmk1
amIyMHdPd1lJS3dZQkJRVUhNQUtHTDJoMGRIQTZMeTlqYzJNeg0KIyBMVEl3TVRBdFlXbGhMblps
Y21semFXZHVMbU52YlM5RFUwTXpMVEl3TVRBdVkyVnlNQjhHQTFVZEl3UVlNQmFBDQojIEZNK1px
ZXA3SnZSTHlZNlAxL0FGSnUvajBxZWRNQkVHQ1dDR1NBR0crRUlCQVFRRUF3SUVFREFXQmdvckJn
RUUNCiMgQVlJM0FnRWJCQWd3QmdFQkFBRUIvekFOQmdrcWhraUc5dzBCQVFVRkFBT0NBUUVBVVhz
MTduSE53RTBPejkvcw0KIyBqRWI1UzNBVDlaeitzUXZ0TWh2WlZ4M3lpcXhGVzdrL2tSZVNyWVJD
OGZnVzQrcG80cTJNNHJhdVBkOTgzWmVKDQojIHRhOC9qbGhib3dmTkZmaTIyZGJFYU1PRGdaQlZ2
aHFFUW5ZVVRLZUdEcllLSDJYV3BTeDR2RmpaS0xZWkhSS3gNCiMgTmRmZmxiZ3Z3Z0wzWEJkelBN
Uk0raVlXT3NaVUhGZE5ObGZrMkV0UWJ5cHVLSTB1d2JzV3N2TlRmQml5SFBVMw0KIyBvWkFmWDZu
bllYUlRPM1RrWWp4OGdIaTZSWXVFbHF1VnB3NTlibEpaeWoxSWxuQWNKdkVBa0V2VmxJQjVPUHJR
DQojIHZVcEVhU0RpM0FUZElrSmhZbC82Ry9zdXZMU3hycS9wTjdzcVZJcXE0bDAvU3FueHRjaXRs
YTF3Szl5b0FpM28NCiMgWnVKVTV6Q0NCZ293Z2dUeW9BTUNBUUlDRUZJQTVhb2xWdndhaHUyV3lk
UkxNOGN3RFFZSktvWklodmNOQVFFRg0KIyBCUUF3Z2NveEN6QUpCZ05WQkFZVEFsVlRNUmN3RlFZ
RFZRUUtFdzVXWlhKcFUybG5iaXdnU1c1akxqRWZNQjBHDQojIEExVUVDeE1XVm1WeWFWTnBaMjRn
VkhKMWMzUWdUbVYwZDI5eWF6RTZNRGdHQTFVRUN4TXhLR01wSURJd01EWWcNCiMgVm1WeWFWTnBa
MjRzSUVsdVl5NGdMU0JHYjNJZ1lYVjBhRzl5YVhwbFpDQjFjMlVnYjI1c2VURkZNRU1HQTFVRQ0K
IyBBeE04Vm1WeWFWTnBaMjRnUTJ4aGMzTWdNeUJRZFdKc2FXTWdVSEpwYldGeWVTQkRaWEowYVda
cFkyRjBhVzl1DQojIElFRjFkR2h2Y21sMGVTQXRJRWMxTUI0WERURXdNREl3T0RBd01EQXdNRm9Y
RFRJd01ESXdOekl6TlRrMU9Wb3cNCiMgZ2JReEN6QUpCZ05WQkFZVEFsVlRNUmN3RlFZRFZRUUtF
dzVXWlhKcFUybG5iaXdnU1c1akxqRWZNQjBHQTFVRQ0KIyBDeE1XVm1WeWFWTnBaMjRnVkhKMWMz
UWdUbVYwZDI5eWF6RTdNRGtHQTFVRUN4TXlWR1Z5YlhNZ2IyWWdkWE5sDQojIElHRjBJR2gwZEhC
ek9pOHZkM2QzTG5abGNtbHphV2R1TG1OdmJTOXljR0VnS0dNcE1UQXhMakFzQmdOVkJBTVQNCiMg
SlZabGNtbFRhV2R1SUVOc1lYTnpJRE1nUTI5a1pTQlRhV2R1YVc1bklESXdNVEFnUTBFd2dnRWlN
QTBHQ1NxRw0KIyBTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEMUkwdGVwZGVLdXpMcDFG
ZjM3K1RISm42dEdaaitxSjE5DQojIGxQWTJheERYZFlFd2Z3Um9mOHNyZFI3TkhRaU0zMm1VcHpl
am5IdUE0Sm5oN2pkTlg4NDdGTzZHMU5EMUp6VzgNCiMgSlFzNHA0eGpuUmVqQ0tXcnNQdk5hbUtD
VE5VaDJodlo4ZU9FTzRvcVQ0VmJrQUZQeWFkMkVIOG5BM3krcm41OQ0KIyB3ZDM1QmJ3YlNKeHA1
OENrUER4QkFEN2ZsdVhGNUpSeDFsVUJ4d0FtU2tBOHRhRW1xUXluYllDT2tDVjd6NzgvDQojIEhP
c3ZsdnJsaDNmR3RWYXllanRVTUZNYjMySTAveDdSOUZxVEtJWGxUQmRPZmx2OXBKT1pmOS9ONzZS
MTcrOFYNCiMgOWtmbitCbHkyQzQwR3FhMHAweCt2YnRQREQxWDhURFdwamFPMW9CMjF4a3VwYzEr
TkMySkFnTUJBQUdqZ2dIKw0KIyBNSUlCK2pBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1IQUdB
MVVkSUFScE1HY3daUVlMWUlaSUFZYjRSUUVIDQojIEZ3TXdWakFvQmdnckJnRUZCUWNDQVJZY2FI
UjBjSE02THk5M2QzY3VkbVZ5YVhOcFoyNHVZMjl0TDJOd2N6QXENCiMgQmdnckJnRUZCUWNDQWpB
ZUdoeG9kSFJ3Y3pvdkwzZDNkeTUyWlhKcGMybG5iaTVqYjIwdmNuQmhNQTRHQTFVZA0KIyBEd0VC
L3dRRUF3SUJCakJ0QmdnckJnRUZCUWNCREFSaE1GK2hYYUJiTUZrd1Z6QlZGZ2xwYldGblpTOW5h
V1l3DQojIElUQWZNQWNHQlNzT0F3SWFCQlNQNWRNYWhxeU5qbXZEejRCcTFFZ1lMSHNaTGpBbEZp
Tm9kSFJ3T2k4dmJHOW4NCiMgYnk1MlpYSnBjMmxuYmk1amIyMHZkbk5zYjJkdkxtZHBaakEwQmdO
VkhSOEVMVEFyTUNtZ0o2QWxoaU5vZEhSdw0KIyBPaTh2WTNKc0xuWmxjbWx6YVdkdUxtTnZiUzl3
WTJFekxXYzFMbU55YkRBMEJnZ3JCZ0VGQlFjQkFRUW9NQ1l3DQojIEpBWUlLd1lCQlFVSE1BR0dH
R2gwZEhBNkx5OXZZM053TG5abGNtbHphV2R1TG1OdmJUQWRCZ05WSFNVRUZqQVUNCiMgQmdnckJn
RUZCUWNEQWdZSUt3WUJCUVVIQXdNd0tBWURWUjBSQkNFd0g2UWRNQnN4R1RBWEJnTlZCQU1URUZa
bA0KIyBjbWxUYVdkdVRWQkxTUzB5TFRnd0hRWURWUjBPQkJZRUZNK1pxZXA3SnZSTHlZNlAxL0FG
SnUvajBxZWRNQjhHDQojIEExVWRJd1FZTUJhQUZIL1RaYWZDM2V5NzhEQUo4ME01K2dLdk16RXpN
QTBHQ1NxR1NJYjNEUUVCQlFVQUE0SUINCiMgQVFCV0l1WTBwTVJoeTBpNUFhMVdxR1FQMll5UnhM
dk1ET1d0ZXFBaWY5OUhPRW90Yk5GL2NScDg3SENwc2ZCUA0KIyA1QThNVS9vVlh2NTBtRWtraFlF
bUhKRVVSN0JNWTR5N29UVFV4a1hvRFlVbWN3UFFxWXhrYmR4eGt1WkZCV0FWDQojIFdWRTUvRmdV
YS83VXBPMTVhd2dNUVhMbk55SUdDYjRqNlQ5RW1oN3BZWjNNc1pCYy9EM1NqYXhDUFdVMjFMUTkN
CiMgUUNpUG14RFBJeWJNU3lETGtCOWRqRXcweWp6WTVUZldiNlVndlRUckp0bXVEZWZGbXZlaHRD
R1JNMitHNkZpNw0KIyBKWHgwRGxqK2RSdGpQODR4Zkp1UEc1YWV4Vk4yaEZ1Y3JaSDZyTzJUdWwz
SUlWUENnbE5qcnhJTlVJY1JHejFVDQojIFVwYUtMSnc5a2hvSW1nVXV4NU9sU0pIVE1ZSUNhekND
QW1jQ0FRRXdnY2t3Z2JReEN6QUpCZ05WQkFZVEFsVlQNCiMgTVJjd0ZRWURWUVFLRXc1V1pYSnBV
MmxuYml3Z1NXNWpMakVmTUIwR0ExVUVDeE1XVm1WeWFWTnBaMjRnVkhKMQ0KIyBjM1FnVG1WMGQy
OXlhekU3TURrR0ExVUVDeE15VkdWeWJYTWdiMllnZFhObElHRjBJR2gwZEhCek9pOHZkM2QzDQoj
IExuWmxjbWx6YVdkdUxtTnZiUzl5Y0dFZ0tHTXBNVEF4TGpBc0JnTlZCQU1USlZabGNtbFRhV2R1
SUVOc1lYTnoNCiMgSURNZ1EyOWtaU0JUYVdkdWFXNW5JREl3TVRBZ1EwRUNFREVrWEZhblRINlgx
TG5SOS9RQy9nSXdDUVlGS3c0RA0KIyBBaG9GQUtCNE1CZ0dDaXNHQVFRQmdqY0NBUXd4Q2pBSW9B
S0FBS0VDZ0FBd0dRWUpLb1pJaHZjTkFRa0RNUXdHDQojIENpc0dBUVFCZ2pjQ0FRUXdIQVlLS3dZ
QkJBR0NOd0lCQ3pFT01Bd0dDaXNHQVFRQmdqY0NBUlV3SXdZSktvWkkNCiMgaHZjTkFRa0VNUllF
RkRvQUVtZWxnR0ZCSnlEbmJSNnpJNlNEUXR3M01BMEdDU3FHU0liM0RRRUJBUVVBQklJQg0KIyBB
Rzc2dHorbGxMTWZIWkdVV0dYZkl6bGMvdFhPemJTVTFaNU1TSFdISlluL3B1Tm9aR1FKQWEycTRD
bDgydk1DDQojIEJuUnRMeEJ1amNUNUx4Tk9SVGI1VFg4UEF3Y2crZjRRbUpLZW5YY0ZMa3RocWcw
ZWJNTlVQc0dUc0wyTjF3RTANCiMgVllYb2NpNDh4Y1F6dzhCODNWVHhLaEQyekl5WHhLT0hUV01J
NEp6U0wyZENpeHFReDU4YWoxdEdZclZTNllXNA0KIyBlbzlIMURtKzZ1c0NvOEU2OG5Zd095WUZk
YU5iNmpONG0zUDJoTGcrZ2dMZm9qT3NnVHRWUFErLy9YQ2ptaTlYDQojIGtxYkNzT014SHdYQlhl
SUFZRE9ZVTlJWUJzMEtURGtxdEIrc1NkcHJWdTdlaHI2bXk2bk1DUkVMNzdiaEZrNjQNCiMgenpN
eklHNEsvaG9nR2hkaEJwbkpEZkU9DQojIFNJRyAjIEVuZCBzaWduYXR1cmUgYmxvY2sNCg=="""


killpid = """"""

ejectusb = """PCNQRVJTSVNURU5UDQouU1lOT1BTSVMNCiAgICBSdW5zIGFuZCBlamVjdHMgdGhlIFVTQiByZW1vdmFibGUgZGV2aWNlcyBiYXNlZCBvbiB0aGUgZHJpdmUgbGV0dGVyIHRoZW0NCi5ERVNDUklQVElPTg0KICAgIFRoaXMgc2NyaXB0IHVzZXMgdGhlIERpc21vdW50IG1ldGhvZCB3aXRoaW4gdGhlIFdpbjMyX3ZvbHVtZSBjbGFzcyB0byB1bm1vdW50IHRoZSBVU0IgZHJpdmVzIG1vbWVudGFyaWx5Lg0KCQ0KLlBBUkFNRVRFUiANCiAgICBbc3RyaW5nXURyaXZlTGV0dGVyIC0gZGVmYXVsdCBpcyBFOlwNCi5OT1RFUw0KTmFtZTogRWplY3QgVVNCIGRyaXZlDQpBdXRob3I6IEpvaG4gQW5kcmENCkRhdGVDcmVhdGVkOiAyLzE3LzIwMTUNCk9VVFBVVA0KPT09PT09DQoxMDAwMTExMiAjRXZlbnQgSUQNCiM+DQpQYXJhbSAoDQoJDQogICAgW3N0cmluZ10kZHJpdmVfbGV0dGVyDQopDQokZXZlbnRJRCA9IDEwMDAxMTEyDQoNCg0KI0ZpeCBvdXRwdXQgdG8gTk9UIHB1dCBsaW5lIGJyZWFrcyBpbiB0aGUgb3V0cHV0IChvaywgYWZ0ZXIgNGsgY29sdW1ucyBpdCB3aWxsKQ0KaWYoICRIb3N0IC1hbmQgJEhvc3QuVUkgLWFuZCAkSG9zdC5VSS5SYXdVSSApIHsNCgkkcmF3VUkgPSAkSG9zdC5VSS5SYXdVSQ0KCSRvbGRTaXplID0gJHJhd1VJLkJ1ZmZlclNpemUNCgkkdHlwZU5hbWUgPSAkb2xkU2l6ZS5HZXRUeXBlKCApLkZ1bGxOYW1lDQoJJG5ld1NpemUgPSBOZXctT2JqZWN0ICR0eXBlTmFtZSAoNDA5NiwgJG9sZFNpemUuSGVpZ2h0KQ0KCSRyYXdVSS5CdWZmZXJTaXplID0gJG5ld1NpemUNCn0NCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNCiN0aGVzZSBhcmUgdXRpbGl0eSBtZXRob2RzIGZvciBkb2luZyBjb21tb24gdGFza3MgZm9yIFppZnRlbiBleHRlbnNpb24gc2NyaXB0cw0KI3Bvd2Vyc2hlbGwgdmVyc2lvbiAob25seSB3b3JrcyBmb3IgMiBhbmQgdXApDQokcHN2ZXJzaW9uID0gJFBTVmVyc2lvblRhYmxlLlBTVmVyc2lvbg0KI2dldCB0aGUgbmFtZSBvZiB0aGlzIHNjcmlwdCwgc2VydmVzIGFzIGJhc2UgZm9yIHRoaW5ncw0KJHNjcmlwdE5hbWUgPSBzcGxpdC1wYXRoIC1MZWFmICRNeUludm9jYXRpb24uTXlDb21tYW5kLkRlZmluaXRpb24NCiNnZXQgdGhlIGRpcmVjdG9yeSBvZiB0aGlzIHNjcmlwdCwgd2hpY2ggY291bGQgYmUgdXNlZCBmb3IgdGVtcCBmaWxlcw0KJHNjcmlwdFBhdGggPSBzcGxpdC1wYXRoIC1wYXJlbnQgJE15SW52b2NhdGlvbi5NeUNvbW1hbmQuRGVmaW5pdGlvbg0KI2dldCB0aGUgbmFtZSBvZiB0aGUgJ2JlZ2luJyBhbmQgJ2VuZCcgZXZlbnRzLCB3aGljaCBhcmUgdXNlZCB3aGVuIHJ1bm5pbmcgJ3BlcnNpc3RlbnQnbHkgKG9ubHkpDQokYmVnaW5FdmVudE5hbWUgPSAoICJHbG9iYWxcIiArICRzY3JpcHROYW1lICsgIi5iZWdpbiIgKQ0KJGVuZEV2ZW50TmFtZSA9ICggIkdsb2JhbFwiICsgJHNjcmlwdE5hbWUgKyAiLmVuZCIgKQ0KDQojc3RhbmRhcmQgbWV0aG9kIG9mIGVtaXR0aW5nIGV4dGVuc2lvbiByZXN1bHRzDQpmdW5jdGlvbiBFbWl0RXh0ZW5zaW9uUmVzdWx0cw0Kew0KCXBhcmFtICgNCgkJW2ludF0kZXZlbnRDb2RlLCAjdGhlIHJlcXVpcmVkIGx1Y2FzaWFuIGV2ZW50IGNvZGUNCgkJW1N5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3RdJHJlc3VsdFNldCAjdGhlIG9wdGlvbmFsIHNldCBvZiBtdWx0aS12YWx1ZWQgZGF0YQ0KCSkNCiANCglXcml0ZS1PdXRwdXQgIj09PT0gQkVHSU4gRVhURU5TSU9OIFJFU1VMVFMgPT09PSINCglXcml0ZS1PdXRwdXQgJGV2ZW50Q29kZQ0KDQoJaWYgKCRyZXN1bHRTZXQgLW5lICRudWxsKSAjYWJzdXJkDQoJew0KCQlmb3JlYWNoICggJHJvdyBpbiAkcmVzdWx0c2V0ICkNCgkJew0KCQkJaWYgKCRyb3cgLW5lICRudWxsKSAjcHJlcG9zdGVyb3VzDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgW3N0cmluZ10kcm93dGV4dCA9ICIiDQogICAgICAgICAgICAgICAgZm9yZWFjaCAoICRmaWVsZCBpbiAkcm93ICkNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICNmaWVsZCBzZXAgaWYgbm90IGZpcnN0IGl0ZW0NCiAgICAgICAgICAgICAgICAgICAgaWYgKCAwIC1uZSAkcm93dGV4dC5sZW5ndGggKQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAkcm93dGV4dCArPSAifCINCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAoJGZpZWxkIC1lcSAkbnVsbCkgI2NvbmNlaXZhYmxlDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICNudWxsIG9iamVjdHMganVzdCB0cmFuc2xhdGUgdG8gdGhlIGVtcHR5IGZpZWxkDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAjZXNjYXBlIGZpZWxkDQogICAgICAgICAgICAgICAgICAgICAgICBbc3RyaW5nXSRmaWVsZHRleHQgPSAkZmllbGQNCiAgICAgICAgICAgICAgICAgICAgICAgICRmaWVsZHRleHQgPSAkZmllbGR0ZXh0IC1yZXBsYWNlICdbXFxdJywnXFwnDQogICAgICAgICAgICAgICAgICAgICAgICAkZmllbGR0ZXh0ID0gJGZpZWxkdGV4dCAtcmVwbGFjZSAnW1x8XScsICdcfCcNCiAgICAgICAgICAgICAgICAgICAgICAgICRmaWVsZHRleHQgPSAkZmllbGR0ZXh0IC1yZXBsYWNlICdbXHJdJywgIlxgciINCiAgICAgICAgICAgICAgICAgICAgICAgICRmaWVsZHRleHQgPSAkZmllbGR0ZXh0IC1yZXBsYWNlICdbXG5dJywgIlxgbiINCiAgICAgICAgICAgICAgICAgICAgICAgICRyb3d0ZXh0ICs9ICRmaWVsZHRleHQNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBXcml0ZS1PdXRwdXQgJHJvd3RleHQNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICBXcml0ZS1PdXRwdXQgIj09PT0gRU5EIEVYVEVOU0lPTiBSRVNVTFRTID09PT0iDQogICAgcmV0dXJuDQp9DQoNCiNpbiAncGVyc2lzdGVudCcgbW9kZSwgb3VyIHByb2Nlc3MgaXMgZXhwZWN0ZWQgdG8gbGl2ZSBhIGxvbmcgd2hpbGUsIHByb2R1Y2luZw0KI211bHRpcGxlIHJlc3VsdCBzZXRzLiBJbiB0aGlzIG1vZGUsIHRoZSBob3N0IHByb2Nlc3MgKGkuZS4gdGhlIEFnZW50KSB3aWxsDQojdXNlIGV2ZW50cyB0byBjb252ZXkgdG8gdXM6IGEpIHRpbWUgdG8gcnVuIChtYXliZSBnZW5lcmF0aW5nIGEgcmVzdWx0IHNldCksDQojYW5kIGIpIHRpbWUgdG8gdGVybWluYXRlLg0KI2dldCBvdXIgYmVnaW4gYW5kIGVuZCBldmVudCBoYW5kbGVzLCBpZiBwb3NzaWJsZSAoaS5lLiwgb25seSBpZiB3ZSBhcmUgYmVpbmcgcnVuICdwZXJzaXN0ZW50bHknKQ0KZnVuY3Rpb24gR2V0RXZlbnRIYW5kbGVzRm9yUGVyc2lzdGVudE1vZGUNCnsNCiAgICAkZXZ0QmVnaW4gPSAkbnVsbA0KICAgIHRyeSB7ICRldnRCZWdpbiA9IFtTeXN0ZW0uVGhyZWFkaW5nLkV2ZW50V2FpdEhhbmRsZV06Ok9wZW5FeGlzdGluZygkYmVnaW5FdmVudE5hbWUpIH0NCiAgICBjYXRjaCB7IH0NCiAgICAkZXZ0RW5kID0gJG51bGwNCiAgICB0cnkgeyAkZXZ0RW5kID0gW1N5c3RlbS5UaHJlYWRpbmcuRXZlbnRXYWl0SGFuZGxlXTo6T3BlbkV4aXN0aW5nKCRlbmRFdmVudE5hbWUpIH0NCiAgICBjYXRjaCB7IH0NCiAgICANCiAgICBpZiAoICggJGV2dEJlZ2luIC1uZSAkbnVsbCApIC1hbmQgKCAkZXZ0RW5kIC1uZSAkbnVsbCApICkNCiAgICB7DQogICAgICAgICR0cnVlDQogICAgICAgICRldnRCZWdpbg0KICAgICAgICAkZXZ0RW5kDQogICAgfQ0KICAgIGVsc2UNCiAgICB7DQogICAgICAgICRmYWxzZQ0KICAgICAgICAkbnVsbA0KICAgICAgICAkbnVsbA0KICAgIH0NCn0NCg0KI2luICdwZXJzaXN0ZW50JyBtb2RlLCBvdXIgcHJvY2VzcyBpcyBleHBlY3RlZCB0byBsaXZlIGEgbG9uZyB3aGlsZSwgcHJvZHVjaW5nDQojbXVsdGlwbGUgcmVzdWx0IHNldHMuIEluIHRoaXMgbW9kZSwgdGhlIGhvc3QgcHJvY2VzcyAoaS5lLiB0aGUgQWdlbnQpIHdpbGwNCiN1c2UgZXZlbnRzIHRvIGNvbnZleSB0byB1czogYSkgdGltZSB0byBydW4gKG1heWJlIGdlbmVyYXRpbmcgYSByZXN1bHQgc2V0KSwNCiNhbmQgYikgdGltZSB0byB0ZXJtaW5hdGUuDQojZ2V0IG91ciBiZWdpbiBhbmQgZW5kIGV2ZW50IGhhbmRsZXMsIGlmIHBvc3NpYmxlIChpLmUuLCBvbmx5IGlmIHdlIGFyZSBiZWluZyBydW4gJ3BlcnNpc3RlbnRseScpDQpmdW5jdGlvbiBHZXRFdmVudEhhbmRsZXNGb3JQZXJzaXN0ZW50TW9kZQ0Kew0KICAgICRldnRCZWdpbiA9ICRudWxsDQogICAgdHJ5IHsgJGV2dEJlZ2luID0gW1N5c3RlbS5UaHJlYWRpbmcuRXZlbnRXYWl0SGFuZGxlXTo6T3BlbkV4aXN0aW5nKCRiZWdpbkV2ZW50TmFtZSkgfQ0KICAgIGNhdGNoIHsgfQ0KICAgICRldnRFbmQgPSAkbnVsbA0KICAgIHRyeSB7ICRldnRFbmQgPSBbU3lzdGVtLlRocmVhZGluZy5FdmVudFdhaXRIYW5kbGVdOjpPcGVuRXhpc3RpbmcoJGVuZEV2ZW50TmFtZSkgfQ0KICAgIGNhdGNoIHsgfQ0KICAgIA0KICAgIGlmICggKCAkZXZ0QmVnaW4gLW5lICRudWxsICkgLWFuZCAoICRldnRFbmQgLW5lICRudWxsICkgKQ0KICAgIHsNCiAgICAgICAgJHRydWUNCiAgICAgICAgJGV2dEJlZ2luDQogICAgICAgICRldnRFbmQNCiAgICB9DQogICAgZWxzZQ0KICAgIHsNCiAgICAgICAgJGZhbHNlDQogICAgICAgICRudWxsDQogICAgICAgICRudWxsDQogICAgfQ0KfQ0KDQojdGhlc2UgdHJpdmlhbCBoZWxwZXJzIGFyZSBoZXJlIG1vc3RseSBmb3IgZG9jdW1lbnRhdGlvbjsgb2J2aW91c2x5IHRoZXkgYXJlIHRyaXZpYWwNCiNjcmVhdGUgcmVzdWx0IHNldA0KZnVuY3Rpb24gQ3JlYXRlUmVzdWx0U2V0DQp7DQogICAgTmV3LU9iamVjdCBTeXN0ZW0uQ29sbGVjdGlvbnMuQXJyYXlMaXN0DQp9DQojY3JlYXRlIHJlc3VsdCBzZXQgcm93DQpmdW5jdGlvbiBDcmVhdGVSZXN1bHRTZXRSb3cNCnsNCiAgICBOZXctT2JqZWN0IFN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3QNCn0NCiNhZGQgcm93IGl0ZW0NCmZ1bmN0aW9uIEFkZFJvd0l0ZW0gKCBbU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdF0kcm93LCBbc3RyaW5nXSRpdGVtICkNCnsNCiAgICBbdm9pZF0kcm93LkFkZCggJGl0ZW0gKQ0KfQ0KI2FkZCByb3cNCmZ1bmN0aW9uIEFkZFJvdyAoIFtTeXN0ZW0uQ29sbGVjdGlvbnMuQXJyYXlMaXN0XSRyZXN1bHRzZXQsIFtTeXN0ZW0uQ29sbGVjdGlvbnMuQXJyYXlMaXN0XSRyb3cgKQ0Kew0KICAgIFt2b2lkXSRyZXN1bHRzZXQuQWRkKCAkcm93ICkNCn0NCg0KDQoNCkZ1bmN0aW9uIEVqZWN0X1VTQl9kcml2ZShbU3lzdGVtLkNvbGxlY3Rpb25zLkFycmF5TGlzdF0kZHJpdmVfbGV0dGVyKQ0Kew0KCSMkZHJpdmVfbGV0dGVyID0gJGRyaXZlX2xldHRlciArICc6XCcNCiAgICANCiAgICAkdm9sID0gZ2V0LXdtaW9iamVjdCAtQ2xhc3MgV2luMzJfVm9sdW1lIHwgd2hlcmV7JF8ubmFtZSAtZXEgJGRyaXZlX2xldHRlciAgIH0gIA0KICAgIA0KICAgICR2b2wuRHJpdmVMZXR0ZXIgPSAkbnVsbCAgDQogICAgJHZvbC5QdXQoKSAgDQogICAgJHZvbC5EaXNtb3VudCgkZmFsc2UsICRmYWxzZSkNCg0KCQ0KfQ0KDQojJGdlaHJldCA9IEdldEV2ZW50SGFuZGxlc0ZvclBlcnNpc3RlbnRNb2RlDQpFamVjdF9VU0JfZHJpdmUgKCRkcml2ZV9sZXR0ZXIgKyAnOlwnKQ0KRW1pdEV4dGVuc2lvblJlc3VsdHMgJGV2ZW50SUQgJHJlc3VsdFNldA0KDQoiTGVhdmluZyBzY3JpcHQiDQpFeGl0IDANCg0KIyBTSUcgIyBCZWdpbiBzaWduYXR1cmUgYmxvY2sNCiMgTUlJVFhRWUpLb1pJaHZjTkFRY0NvSUlUVGpDQ0Uwb0NBUUV4Q3pBSkJnVXJEZ01DR2dVQU1Ha0dDaXNHQVFRQg0KIyBnamNDQVFTZ1d6QlpNRFFHQ2lzR0FRUUJnamNDQVI0d0pnSURBUUFBQkJBZnpEdGdXVXNJVHJjazBzWXBmdk5SDQojIEFnRUFBZ0VBQWdFQUFnRUFBZ0VBTUNFd0NRWUZLdzREQWhvRkFBUVVTZjF6Tm5xelU3cnpxVm1WbVJLUnpaZncNCiMgSzhxZ2doQmNNSUlFMHpDQ0E3dWdBd0lCQWdJUUdOclJuaVo5Nkx0S0lWak56R3M3U2pBTkJna3Foa2lHOXcwQg0KIyBBUVVGQURDQnlqRUxNQWtHQTFVRUJoTUNWVk14RnpBVkJnTlZCQW9URGxabGNtbFRhV2R1TENCSmJtTXVNUjh3DQojIEhRWURWUVFMRXhaV1pYSnBVMmxuYmlCVWNuVnpkQ0JPWlhSM2IzSnJNVG93T0FZRFZRUUxFekVvWXlrZ01qQXcNCiMgTmlCV1pYSnBVMmxuYml3Z1NXNWpMaUF0SUVadmNpQmhkWFJvYjNKcGVtVmtJSFZ6WlNCdmJteDVNVVV3UXdZRA0KIyBWUVFERXp4V1pYSnBVMmxuYmlCRGJHRnpjeUF6SUZCMVlteHBZeUJRY21sdFlYSjVJRU5sY25ScFptbGpZWFJwDQojIGIyNGdRWFYwYUc5eWFYUjVJQzBnUnpVd0hoY05NRFl4TVRBNE1EQXdNREF3V2hjTk16WXdOekUyTWpNMU9UVTUNCiMgV2pDQnlqRUxNQWtHQTFVRUJoTUNWVk14RnpBVkJnTlZCQW9URGxabGNtbFRhV2R1TENCSmJtTXVNUjh3SFFZRA0KIyBWUVFMRXhaV1pYSnBVMmxuYmlCVWNuVnpkQ0JPWlhSM2IzSnJNVG93T0FZRFZRUUxFekVvWXlrZ01qQXdOaUJXDQojIFpYSnBVMmxuYml3Z1NXNWpMaUF0SUVadmNpQmhkWFJvYjNKcGVtVmtJSFZ6WlNCdmJteDVNVVV3UXdZRFZRUUQNCiMgRXp4V1pYSnBVMmxuYmlCRGJHRnpjeUF6SUZCMVlteHBZeUJRY21sdFlYSjVJRU5sY25ScFptbGpZWFJwYjI0Zw0KIyBRWFYwYUc5eWFYUjVJQzBnUnpVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN2DQojIEpBZ0lLWG8xbm1BTXF1ZExPMDdjZkx3OFJSeTdLK0QrS1FMNVZ3aWpaSVVWSi9YeHJjZ3hpVjBpNkNxcXBrS3oNCiMgai9pNVZiZXh0MHV6L285K0IxZnM3MFBiWm1JVlljOWdEYVRZM3ZqZ3cySUlQVlFUNjBuS1dWU0ZKdVVyanh1Zg0KIyA2L1doa2NJelNkaERZMnBTUzlLUDZIQlJUZEdKYVh2SGNQYXozQkowMjN0ZFMxYlRscjhWZDZHdzlLSWw4cThjDQojIGttY1k1ZlFHQk8rUXVlUUE1TjA2dFJuL0FycjBQTzdnaStzM2krejAxNnp5OXZBOXI5MTFrVE1aSFJ4QXkzUWsNCiMgR1NHVDJSVCtyQ3BTeDQvVkJFbmtqV05IaUR4cGc4ditSNzByZmsvRmxhNE9uZFRSUThCbmMrTVVDSDdsUDU5eg0KIyB1RE1LejEwL05JZVdpdTVUNkNVVkFnTUJBQUdqZ2JJd2dhOHdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WDQojIEhROEJBZjhFQkFNQ0FRWXdiUVlJS3dZQkJRVUhBUXdFWVRCZm9WMmdXekJaTUZjd1ZSWUphVzFoWjJVdloybG0NCiMgTUNFd0h6QUhCZ1VyRGdNQ0dnUVVqK1hUR29hc2pZNXJ3OCtBYXRSSUdDeDdHUzR3SlJZamFIUjBjRG92TDJ4dg0KIyBaMjh1ZG1WeWFYTnBaMjR1WTI5dEwzWnpiRzluYnk1bmFXWXdIUVlEVlIwT0JCWUVGSC9UWmFmQzNleTc4REFKDQojIDgwTTUrZ0t2TXpFek1BMEdDU3FHU0liM0RRRUJCUVVBQTRJQkFRQ1RKRW93WDJMUDJCcVlMejNxM0prdHZYZjINCiMgcFhraU9PekVwNkI0RXExaURrVndaTVhubDJZdG1BbCtYNi9XekNobDhnR3FDQnBIM3ZuNWZKSmFDR2tnRGRrKw0KIyBiVzQ4RFc3WTVnYVJRQmk1K01IdDM5dEJxdUNXSU1uTlpCVTRnY21VN3FLRUtRc1RiNDdiRE4wbEF0dWtpeGxFDQojIDBrRjZCV2xLV0U5Z3luNkNhZ3NDcWlVWE9iWGJmK2VFWlNxVmlyMkczbDZCRm9NdEVNemUvYWlDS20wb0h3MEwNCiMgeE9YbkdpWVo0ZlFSYnhDMWxmem5RZ1V5Mjg2ZFVWNG90cDZGMDF2dnBYMUZRSEtPdHc1ckRnYjdNelZJY2JpZA0KIyBKNHZFWlY4TmhuYWNSSHIybFZ6MlhUSUlNNlJVdGhnL2FGenlRa3FGT0ZTRFg5SG9MUEtzRWRhbzdXTnFNSUlGDQojIGN6Q0NCRnVnQXdJQkFnSVFNU1JjVnFkTWZwZlV1ZEgzOUFMK0FqQU5CZ2txaGtpRzl3MEJBUVVGQURDQnRERUwNCiMgTUFrR0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFvVERsWmxjbWxUYVdkdUxDQkpibU11TVI4d0hRWURWUVFMRXhaVw0KIyBaWEpwVTJsbmJpQlVjblZ6ZENCT1pYUjNiM0pyTVRzd09RWURWUVFMRXpKVVpYSnRjeUJ2WmlCMWMyVWdZWFFnDQojIGFIUjBjSE02THk5M2QzY3VkbVZ5YVhOcFoyNHVZMjl0TDNKd1lTQW9ZeWt4TURFdU1Dd0dBMVVFQXhNbFZtVnkNCiMgYVZOcFoyNGdRMnhoYzNNZ015QkRiMlJsSUZOcFoyNXBibWNnTWpBeE1DQkRRVEFlRncweE5EQXpNalV3TURBdw0KIyBNREJhRncweE5qQTBNak15TXpVNU5UbGFNSUcyTVFzd0NRWURWUVFHRXdKVlV6RU9NQXdHQTFVRUNCTUZWR1Y0DQojIFlYTXhEekFOQmdOVkJBY1RCa0YxYzNScGJqRWlNQ0FHQTFVRUNoUVpXbWxtZEdWdUlGUmxZMmh1YjJ4dloybGwNCiMgY3l3Z1NXNWpMakUrTUR3R0ExVUVDeE0xUkdsbmFYUmhiQ0JKUkNCRGJHRnpjeUF6SUMwZ1RXbGpjbTl6YjJaMA0KIyBJRk52Wm5SM1lYSmxJRlpoYkdsa1lYUnBiMjRnZGpJeElqQWdCZ05WQkFNVUdWcHBablJsYmlCVVpXTm9ibTlzDQojIGIyZHBaWE1zSUVsdVl5NHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNk1sQ2sNCiMgQ3MwcFZ5MGtXbVhFN0xoZ011d0VBY1QySXhHNmZ6ckxQek9UaHBSN0dQQUpZS0cwVHM3R3gwVllyMUgyMVZxbQ0KIyB6RmhjbXQ1L0E0Zk9sZUQzcnlWL3ZpSUtMRnh3QnFUNEkvVEVJUEJ0NlRPQ2xPSnBnYXNBTFpoK3NGTTZDdHBoDQojIHpvaEdYNEFrdTVKYzN1dlNVVUNpbkdJVWhSV2ExclVRS3QxMzNZRkVBdkN6K0VNOUZVUXgzcTMwOXlQWjNSSHUNCiMgRFpmdHNWK2IxaFR5TzlnTlJKVFoxWWx2YVp2UnJIckRaRUorRDdzOVdnVTh4aEszaDdCRC9NT3pBWVU5Tkhjcg0KIyBHNmY0dDkrMkVSc2wwdXBiSXUrTHhwS0lvNThJYTZHTEtWdFlXV0RDeWVxeDYyL29kTzR6UHlwRFJjWmh2RzgvDQojIGdHMjh1YU5wNWEvb1FURE5BZ01CQUFHamdnRjdNSUlCZHpBSkJnTlZIUk1FQWpBQU1BNEdBMVVkRHdFQi93UUUNCiMgQXdJSGdEQkFCZ05WSFI4RU9UQTNNRFdnTTZBeGhpOW9kSFJ3T2k4dlkzTmpNeTB5TURFd0xXTnliQzUyWlhKcA0KIyBjMmxuYmk1amIyMHZRMU5ETXkweU1ERXdMbU55YkRCRUJnTlZIU0FFUFRBN01Ea0dDMkNHU0FHRytFVUJCeGNEDQojIE1Db3dLQVlJS3dZQkJRVUhBZ0VXSEdoMGRIQnpPaTh2ZDNkM0xuWmxjbWx6YVdkdUxtTnZiUzl5Y0dFd0V3WUQNCiMgVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd013Y1FZSUt3WUJCUVVIQVFFRVpUQmpNQ1FHQ0NzR0FRVUZCekFCaGhobw0KIyBkSFJ3T2k4dmIyTnpjQzUyWlhKcGMybG5iaTVqYjIwd093WUlLd1lCQlFVSE1BS0dMMmgwZEhBNkx5OWpjMk16DQojIExUSXdNVEF0WVdsaExuWmxjbWx6YVdkdUxtTnZiUzlEVTBNekxUSXdNVEF1WTJWeU1COEdBMVVkSXdRWU1CYUENCiMgRk0rWnFlcDdKdlJMeVk2UDEvQUZKdS9qMHFlZE1CRUdDV0NHU0FHRytFSUJBUVFFQXdJRUVEQVdCZ29yQmdFRQ0KIyBBWUkzQWdFYkJBZ3dCZ0VCQUFFQi96QU5CZ2txaGtpRzl3MEJBUVVGQUFPQ0FRRUFVWHMxN25ITndFME96OS9zDQojIGpFYjVTM0FUOVp6K3NRdnRNaHZaVngzeWlxeEZXN2sva1JlU3JZUkM4ZmdXNCtwbzRxMk00cmF1UGQ5ODNaZUoNCiMgdGE4L2psaGJvd2ZORmZpMjJkYkVhTU9EZ1pCVnZocUVRbllVVEtlR0RyWUtIMlhXcFN4NHZGalpLTFlaSFJLeA0KIyBOZGZmbGJndndnTDNYQmR6UE1STStpWVdPc1pVSEZkTk5sZmsyRXRRYnlwdUtJMHV3YnNXc3ZOVGZCaXlIUFUzDQojIG9aQWZYNm5uWVhSVE8zVGtZang4Z0hpNlJZdUVscXVWcHc1OWJsSlp5ajFJbG5BY0p2RUFrRXZWbElCNU9QclENCiMgdlVwRWFTRGkzQVRkSWtKaFlsLzZHL3N1dkxTeHJxL3BON3NxVklxcTRsMC9TcW54dGNpdGxhMXdLOXlvQWkzbw0KIyBadUpVNXpDQ0Jnb3dnZ1R5b0FNQ0FRSUNFRklBNWFvbFZ2d2FodTJXeWRSTE04Y3dEUVlKS29aSWh2Y05BUUVGDQojIEJRQXdnY294Q3pBSkJnTlZCQVlUQWxWVE1SY3dGUVlEVlFRS0V3NVdaWEpwVTJsbmJpd2dTVzVqTGpFZk1CMEcNCiMgQTFVRUN4TVdWbVZ5YVZOcFoyNGdWSEoxYzNRZ1RtVjBkMjl5YXpFNk1EZ0dBMVVFQ3hNeEtHTXBJREl3TURZZw0KIyBWbVZ5YVZOcFoyNHNJRWx1WXk0Z0xTQkdiM0lnWVhWMGFHOXlhWHBsWkNCMWMyVWdiMjVzZVRGRk1FTUdBMVVFDQojIEF4TThWbVZ5YVZOcFoyNGdRMnhoYzNNZ015QlFkV0pzYVdNZ1VISnBiV0Z5ZVNCRFpYSjBhV1pwWTJGMGFXOXUNCiMgSUVGMWRHaHZjbWwwZVNBdElFYzFNQjRYRFRFd01ESXdPREF3TURBd01Gb1hEVEl3TURJd056SXpOVGsxT1Zvdw0KIyBnYlF4Q3pBSkJnTlZCQVlUQWxWVE1SY3dGUVlEVlFRS0V3NVdaWEpwVTJsbmJpd2dTVzVqTGpFZk1CMEdBMVVFDQojIEN4TVdWbVZ5YVZOcFoyNGdWSEoxYzNRZ1RtVjBkMjl5YXpFN01Ea0dBMVVFQ3hNeVZHVnliWE1nYjJZZ2RYTmwNCiMgSUdGMElHaDBkSEJ6T2k4dmQzZDNMblpsY21semFXZHVMbU52YlM5eWNHRWdLR01wTVRBeExqQXNCZ05WQkFNVA0KIyBKVlpsY21sVGFXZHVJRU5zWVhOeklETWdRMjlrWlNCVGFXZHVhVzVuSURJd01UQWdRMEV3Z2dFaU1BMEdDU3FHDQojIFNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUQxSTB0ZXBkZUt1ekxwMUZmMzcrVEhKbjZ0R1pqK3FKMTkNCiMgbFBZMmF4RFhkWUV3ZndSb2Y4c3JkUjdOSFFpTTMybVVwemVqbkh1QTRKbmg3amROWDg0N0ZPNkcxTkQxSnpXOA0KIyBKUXM0cDR4am5SZWpDS1dyc1B2TmFtS0NUTlVoMmh2WjhlT0VPNG9xVDRWYmtBRlB5YWQyRUg4bkEzeStybjU5DQojIHdkMzVCYndiU0p4cDU4Q2tQRHhCQUQ3Zmx1WEY1SlJ4MWxVQnh3QW1Ta0E4dGFFbXFReW5iWUNPa0NWN3o3OC8NCiMgSE9zdmx2cmxoM2ZHdFZheWVqdFVNRk1iMzJJMC94N1I5RnFUS0lYbFRCZE9mbHY5cEpPWmY5L043NlIxNys4Vg0KIyA5a2ZuK0JseTJDNDBHcWEwcDB4K3ZidFBERDFYOFREV3BqYU8xb0IyMXhrdXBjMStOQzJKQWdNQkFBR2pnZ0grDQojIE1JSUIrakFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUhBR0ExVWRJQVJwTUdjd1pRWUxZSVpJQVliNFJRRUgNCiMgRndNd1ZqQW9CZ2dyQmdFRkJRY0NBUlljYUhSMGNITTZMeTkzZDNjdWRtVnlhWE5wWjI0dVkyOXRMMk53Y3pBcQ0KIyBCZ2dyQmdFRkJRY0NBakFlR2h4b2RIUndjem92TDNkM2R5NTJaWEpwYzJsbmJpNWpiMjB2Y25CaE1BNEdBMVVkDQojIER3RUIvd1FFQXdJQkJqQnRCZ2dyQmdFRkJRY0JEQVJoTUYraFhhQmJNRmt3VnpCVkZnbHBiV0ZuWlM5bmFXWXcNCiMgSVRBZk1BY0dCU3NPQXdJYUJCU1A1ZE1haHF5TmptdkR6NEJxMUVnWUxIc1pMakFsRmlOb2RIUndPaTh2Ykc5bg0KIyBieTUyWlhKcGMybG5iaTVqYjIwdmRuTnNiMmR2TG1kcFpqQTBCZ05WSFI4RUxUQXJNQ21nSjZBbGhpTm9kSFJ3DQojIE9pOHZZM0pzTG5abGNtbHphV2R1TG1OdmJTOXdZMkV6TFdjMUxtTnliREEwQmdnckJnRUZCUWNCQVFRb01DWXcNCiMgSkFZSUt3WUJCUVVITUFHR0dHaDBkSEE2THk5dlkzTndMblpsY21semFXZHVMbU52YlRBZEJnTlZIU1VFRmpBVQ0KIyBCZ2dyQmdFRkJRY0RBZ1lJS3dZQkJRVUhBd013S0FZRFZSMFJCQ0V3SDZRZE1Cc3hHVEFYQmdOVkJBTVRFRlpsDQojIGNtbFRhV2R1VFZCTFNTMHlMVGd3SFFZRFZSME9CQllFRk0rWnFlcDdKdlJMeVk2UDEvQUZKdS9qMHFlZE1COEcNCiMgQTFVZEl3UVlNQmFBRkgvVFphZkMzZXk3OERBSjgwTTUrZ0t2TXpFek1BMEdDU3FHU0liM0RRRUJCUVVBQTRJQg0KIyBBUUJXSXVZMHBNUmh5MGk1QWExV3FHUVAyWXlSeEx2TURPV3RlcUFpZjk5SE9Fb3RiTkYvY1JwODdIQ3BzZkJQDQojIDVBOE1VL29WWHY1MG1Fa2toWUVtSEpFVVI3Qk1ZNHk3b1RUVXhrWG9EWVVtY3dQUXFZeGtiZHh4a3VaRkJXQVYNCiMgV1ZFNS9GZ1VhLzdVcE8xNWF3Z01RWExuTnlJR0NiNGo2VDlFbWg3cFlaM01zWkJjL0QzU2pheENQV1UyMUxROQ0KIyBRQ2lQbXhEUEl5Yk1TeURMa0I5ZGpFdzB5anpZNVRmV2I2VWd2VFRySnRtdURlZkZtdmVodENHUk0yK0c2Rmk3DQojIEpYeDBEbGorZFJ0alA4NHhmSnVQRzVhZXhWTjJoRnVjclpINnJPMlR1bDNJSVZQQ2dsTmpyeElOVUljUkd6MVUNCiMgVXBhS0xKdzlraG9JbWdVdXg1T2xTSkhUTVlJQ2F6Q0NBbWNDQVFFd2dja3dnYlF4Q3pBSkJnTlZCQVlUQWxWVA0KIyBNUmN3RlFZRFZRUUtFdzVXWlhKcFUybG5iaXdnU1c1akxqRWZNQjBHQTFVRUN4TVdWbVZ5YVZOcFoyNGdWSEoxDQojIGMzUWdUbVYwZDI5eWF6RTdNRGtHQTFVRUN4TXlWR1Z5YlhNZ2IyWWdkWE5sSUdGMElHaDBkSEJ6T2k4dmQzZDMNCiMgTG5abGNtbHphV2R1TG1OdmJTOXljR0VnS0dNcE1UQXhMakFzQmdOVkJBTVRKVlpsY21sVGFXZHVJRU5zWVhOeg0KIyBJRE1nUTI5a1pTQlRhV2R1YVc1bklESXdNVEFnUTBFQ0VERWtYRmFuVEg2WDFMblI5L1FDL2dJd0NRWUZLdzREDQojIEFob0ZBS0I0TUJnR0Npc0dBUVFCZ2pjQ0FRd3hDakFJb0FLQUFLRUNnQUF3R1FZSktvWklodmNOQVFrRE1Rd0cNCiMgQ2lzR0FRUUJnamNDQVFRd0hBWUtLd1lCQkFHQ053SUJDekVPTUF3R0Npc0dBUVFCZ2pjQ0FSVXdJd1lKS29aSQ0KIyBodmNOQVFrRU1SWUVGS2dDcWtUTW1zOGIvT0xudC9zVG90NjUyR2pVTUEwR0NTcUdTSWIzRFFFQkFRVUFCSUlCDQojIEFIRWE3aSthSHBGb0pJUlUzTTBWQjluSjA4blBDY0VMeTBJbFpnR3FzRnVBOUdOMDZNVkQ1RlRWT01zamVJSzgNCiMgUHdpREczMHBCQzQ3a0RFcVVVUU02TnU3Q2U4aXRudktQK1NwZVhEb2xzT2xYbi9tV0g5ZUd5d3hpVElqRW1pSg0KIyAwK0RkY1lxSnFsRlhuWWRnZHNFa1RNRWs5OUs4c2FodUc5dzlIcnJ1eDA4Q3UxdnptdGFlMGc5dStsSU0xS1MzDQojIFhUeHR1MWd4amlSbVhZd09jeklLZ3dRVzRuTUppaytWVTR5MXh6TlVsVjlYdHFCTlpUeGg4VFpndWFyQmhKM0ENCiMgMG5IQSsrM3ZKZHlTM3pxNkF3UTFySHRPeUUyd1dwZm00cndIWFI0QnFYbHVlZkt5R2lwTTNHbFpxZ1Z3UmZyZg0KIyA3SjBhdVd5cExKTUZteVlZclBOSTJFMD0NCiMgU0lHICMgRW5kIHNpZ25hdHVyZSBibG9jaw0K
"""
if __name__ == "__main__":
    import base64
    print "::::" + base64.b64decode(ejectusb) + "::::"